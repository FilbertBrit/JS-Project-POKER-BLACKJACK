/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_multiple_choice_game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/multiple-choice-game.js */ \"./src/scripts/multiple-choice-game.js\");\n/* harmony import */ var _scripts_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/util */ \"./src/scripts/util.js\");\n\n\n// import GameView from \"./scripts/game-view.js\";\n\nconst startMessage = 'Welcome to Poker Pro! Here you can learn how to play poker. There are three distinct levels but an endless amount of rounds within each level. The goal for each level is to select the strongest hand among the player hands. The first level will consist of only 3 different player hands, hands that have only 2 cards. The second level will include a dealers hand, a hand of 3-4 cards, cards that player hands can use to strengthen their hand. Lastly, the final level will include the complete hand of the dealer, 5 cards, cards that player hands can also use to strengthen their hand. Again the goal is select the STRONGEST hand. Check out the info icon next to the sound button to see a scoring sheet. Good Luck!!! READY?!';\n// const startMes = 'Welcome to Poker Pro! Here you can learn how to play poker.';\nconst winningMessage = ['Correct!', 'Nice!', 'Good Job!', 'Wow, correct again!', 'Correct, you are on a roll!', 'Keep it up!!'];\nconst losingMessage = ['Not quite. '];\nlet level = 1;\nlet lost = false;\nlet streak = 0;\nlet game;\nconst scoringDiv = document.getElementById('scoring'); //div holding scoring sheet\nconst board = document.getElementById('board'); //div holding game boards\nconst dealerDiv = document.getElementById('dealer-cards'); //div that holds dealers cards\nconst feedbackContainer = document.getElementById('feedback-container');\nconst score = document.getElementById('score');\nconst playerHandsContainer = document.getElementById('players-hands-container');\nlet loseScreen = document.getElementById('losing-screen');\nlet loseMessage = document.getElementById('losing-message');\nconst soundButton = document.getElementById('sound-button');\nconst audio = document.getElementById('audio');\naudio.style.display = 'none';\naudio.pause();\nlet audioActive = false;\nconst openingMessage = document.getElementById('opening');\nconst noneOpeningMessage = document.getElementById('not-opening');\nconst openingStart = document.getElementById('opening-start');\nlet time = 10;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  noneOpeningMessage.style.display = 'none';\n  scoringDiv.style.display = \"none\"; //blocks div from displaying contents\n  loseScreen.style.display = 'none';\n  startGame(level);\n  document.getElementById(\"start-message\").innerHTML = startMessage;\n  // const divStartbutton = document.getElementById(\"start-button\")\n  // divStartbutton.innerHTML = ('Click Here To Start');\n\n  // want to do something similar for my music\n  // function toggleMusic(){\n  //     audioButton.onclick = function () {\n  //       audioButton.classList.toggle('active')\n  //       if (audio.paused) {\n  //         document.getElementById(\"play-audio\").src = \"./assets/darkmodeButtons/musicOn.png\"\n  //         audio.play()\n  //       } else {\n  //         document.getElementById(\"play-audio\").src = \"./assets/darkmodeButtons/musicOff.png\"\n  //         audio.pause();\n  //       }\n  //     }\n  // }\n\n  // let game = startGame(level);\n  // while(!lost){\n  //     let result = startGame(++level);\n  //     lost = true;\n  // }\n\n  // if(streak === 0){\n  //     const infoIconMessage = document.createElement('h3');\n\n  // }\n});\n\n//will create a game, find the winning hand and output the game onto the app\nfunction startGame(level) {\n  game = new _scripts_multiple_choice_game_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  const gameResult = game.bestHand(level); // grabs the best hand depending on level\n  // game.printGame.call(game); //debugging purposes, to see the full game info in console\n  const questionH2 = document.querySelector(\"#questionH2\");\n  if (level > 1) {\n    dealerDiv.style.display = 'block';\n    const dealerCardContainer = document.createElement('div');\n    dealerCardContainer.setAttribute('id', 'dealerCardContainer');\n    dealerCardContainer.style.display = \"flex\";\n    const dealerH3 = document.createElement('h3');\n    dealerH3.innerHTML = \"Dealer's hand\";\n    dealerH3.setAttribute('id', 'dealer-title');\n    dealerDiv.append(dealerH3);\n    dealerDiv.append(dealerCardContainer);\n    const dealersHand = game.dealer.hand;\n    for (let i = 0; i < dealersHand.length; i++) {\n      const card = document.createElement('img');\n      const cardIdx = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.suits.indexOf(dealersHand[i].suit);\n      const suitArr = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[cardIdx];\n      const cardHash = suitArr.findIndex(el => el.face === dealersHand[i].value);\n      const cardImg = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[cardIdx][cardHash].img;\n      card.setAttribute('src', cardImg);\n      dealerCardContainer.appendChild(card);\n    }\n  } else {\n    dealerDiv.style.display = 'none';\n  }\n  if ([1, 4, 5].includes(level)) {\n    questionH2.innerHTML = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.questions[0];\n  } else if (level === 2) {\n    questionH2.innerHTML = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.questions[1];\n  } else {\n    questionH2.innerHTML = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.questions[2];\n  }\n  const div = document.createElement('div');\n  div.setAttribute('id', \"players-hands\");\n  playerHandsContainer.append(div);\n\n  //for-loop for displaying hands of current game\n  for (let i = 0; i < game.players.length; i++) {\n    const innerDiv = document.createElement('div');\n    innerDiv.setAttribute('id', 'player-hand'.concat(String(i + 1)));\n    // innerDiv.setAttribute(\"style\",\"width:200px\");\n    div.append(innerDiv);\n    const h3 = document.createElement('h3');\n    h3.innerHTML = 'hand '.concat(String(i + 1));\n    innerDiv.append(h3);\n    const nestedDiv = document.createElement('div');\n    nestedDiv.setAttribute('id', 'cards-container');\n    innerDiv.appendChild(nestedDiv);\n    const playerHand = game.players[i].hand;\n    const cardOne = document.createElement('img');\n    const cardTwo = document.createElement('img');\n    const firstCardIdx = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.suits.indexOf(playerHand[0].suit);\n    const secondCardIdx = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.suits.indexOf(playerHand[1].suit);\n    let suitArr = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[firstCardIdx];\n    let cardHash = suitArr.findIndex(el => el.face === playerHand[0].value);\n    let cardImg = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[firstCardIdx][cardHash].img;\n    cardOne.setAttribute('src', cardImg);\n    nestedDiv.appendChild(cardOne);\n    suitArr = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[secondCardIdx];\n    cardHash = suitArr.findIndex(el => el.face === playerHand[1].value);\n    cardImg = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[secondCardIdx][cardHash].img;\n    // console.log(cardImg)\n    cardTwo.setAttribute('src', cardImg);\n    nestedDiv.appendChild(cardTwo);\n  }\n  // checkInfoClick();\n  userSelect();\n\n  // return gameResult // return winning card, later [card, tie, game?, idx?]\n}\n\n//create a feefback element and add text of feedback\nlet feedback = document.createElement('h1');\nfeedbackContainer.append(feedback);\n\n//checks if the hand the user clicked on is correct, creates new game if correct\nfunction checkAnswer(game, answer) {\n  // console.log(game.players[answer-1].hand)\n\n  if (game.winningHand === game.players[answer - 1].hand || game.tie && game.tiedHand === game.players[answer - 1].hand) {\n    console.log(winningMessage[0]);\n    if (streak === 0) {\n      feedback.innerHTML = winningMessage[0] + ' ' + game.outcome;\n    } else {\n      feedback.innerHTML = winningMessage[Math.floor(Math.random() * winningMessage.length)] + ' ' + game.outcome;\n    }\n    // level++;\n    streak++;\n    score.innerHTML = 'Score: ' + streak.toString();\n    lost = false;\n    setTimeout(() => {\n      let div = document.getElementById(\"players-hands\");\n      div.remove();\n      if (document.getElementById(\"dealerCardContainer\")) {\n        let dealerH3 = document.getElementById('dealer-title');\n        dealerH3.remove();\n        dealerDiv.append(dealerH3);\n        let dealerCardContainer = document.getElementById(\"dealerCardContainer\");\n        dealerCardContainer.remove();\n        dealerCardContainer = document.createElement('div');\n        dealerCardContainer.setAttribute('id', 'dealerCardContainer');\n        dealerCardContainer.style.display = \"flex\";\n        dealerDiv.append(dealerCardContainer);\n      }\n      feedback.remove();\n      feedback = document.createElement('h1');\n      feedbackContainer.append(feedback);\n      startGame(level);\n    }, 1850);\n  } else {\n    console.log(losingMessage[0]);\n    feedback.innerHTML = losingMessage[0] + game.outcome;\n    score.innerHTML = 'Score: 0';\n    setTimeout(() => {\n      board.style.display = 'none';\n      loseScreen.style.display = 'block';\n      loseMessage.innerHTML = `Your score was ${streak}, care to beat it? `;\n      streak = 0;\n\n      // setTimeout(() => {\n\n      //     noneOpeningMessage.style.display = 'none';\n      //     openingMessage.style.display = 'block'\n      //     loseScreen.style.display = 'none'\n      //     let div = document.getElementById(\"players-hands\");\n      //     div.remove();\n      //     feedback.remove();\n      //     feedback = document.createElement('h1')\n      //     feedbackContainer.append(feedback)\n      //     startGame(level);\n      //     board.style.display = 'block'\n\n      // }, 5.5 * 1000)\n\n      checkRetryGame();\n    }, 2.5 * 1000);\n    lost = true;\n  }\n}\nfunction userSelect() {\n  document.getElementById('players-hands').addEventListener('click', e => {\n    let answer;\n    if (e.target.id.slice(0, e.target.id.length - 1) === 'player-hand') {\n      answer = e.target.id.slice(e.target.id.length - 1);\n      checkAnswer(game, answer);\n    } else if (e.target.parentNode.id.slice(0, e.target.parentNode.id.length - 1) === 'player-hand') {\n      answer = e.target.parentNode.id.slice(e.target.id.length - 1);\n      checkAnswer(game, answer);\n    } else if (e.target.parentNode.parentNode.id.slice(0, e.target.parentNode.parentNode.id.length - 1) === 'player-hand') {\n      answer = e.target.parentNode.parentNode.id.slice(e.target.id.length - 1);\n      checkAnswer(game, answer);\n    }\n  });\n}\nlet infoClicker;\n//code that creates and shows the scoring img div\n// function checkInfoClick(){\n//     const infoClick = document.getElementById(\"info-button\")\n//     infoClick.addEventListener('click', (e) => {\n\n//         if(loseScreen.style.display === 'block'){\n//             infoClicker = 'lockScreen'\n//             scoringDiv.style.display = 'flex';\n//             loseScreen.style.display = 'none'\n\n//         }else if(board.style.display === 'block'){\n//             infoClicker = 'board'\n//             scoringDiv.style.display = 'flex';\n//             board.style.display = 'none'\n//         }else if(infoClicker === 'lockScreen'){\n//             infoClicker = ''\n//             scoringDiv.style.display = 'none';\n//             loseScreen.style.display = 'block'\n//         }else if(infoClicker === 'board'){\n//             infoClicker = ''\n//             scoringDiv.style.display = 'none';\n//             board.style.display = 'block'\n//         }else if(streak === 0){ // not sure why I need this\n//             infoClicker = 'board'\n//             scoringDiv.style.display = 'flex';\n//             board.style.display = 'none'\n//         }\n\n//     })\n// }\nconst infoClick = document.getElementById(\"info-button\");\ninfoClick.addEventListener('click', e => {\n  if (loseScreen.style.display === 'block') {\n    infoClicker = 'lockScreen';\n    scoringDiv.style.display = 'flex';\n    loseScreen.style.display = 'none';\n  } else if (board.style.display === 'block') {\n    infoClicker = 'board';\n    scoringDiv.style.display = 'flex';\n    board.style.display = 'none';\n  } else if (infoClicker === 'lockScreen') {\n    infoClicker = '';\n    scoringDiv.style.display = 'none';\n    loseScreen.style.display = 'block';\n  } else if (infoClicker === 'board') {\n    infoClicker = '';\n    scoringDiv.style.display = 'none';\n    board.style.display = 'block';\n  } else if (streak === 0) {\n    // not sure why I need this\n    infoClicker = 'board';\n    scoringDiv.style.display = 'flex';\n    board.style.display = 'none';\n  }\n});\nsoundButton.addEventListener('click', e => {\n  //add code to start/stop music\n  //and change music icon\n  if (!audioActive) {\n    audio.play();\n    soundButton.setAttribute('src', 'images/sound-off.png');\n    audioActive = true;\n  } else {\n    audio.pause();\n    soundButton.setAttribute('src', 'images/sound-high.png');\n    audioActive = false;\n  }\n});\nopeningStart.addEventListener('click', e => {\n  openingMessage.style.display = 'none';\n  noneOpeningMessage.style.display = 'block';\n});\nfunction checkRetryGame() {\n  document.getElementById('play-button').addEventListener('click', e => {\n    let div = document.getElementById(\"players-hands\");\n    div.remove();\n    if (document.getElementById(\"dealerCardContainer\")) {\n      let dealerH3 = document.getElementById('dealer-title');\n      dealerH3.remove();\n      dealerDiv.append(dealerH3);\n      let dealerCardContainer = document.getElementById(\"dealerCardContainer\");\n      dealerCardContainer.remove();\n      dealerCardContainer = document.createElement('div');\n      dealerCardContainer.setAttribute('id', 'dealerCardContainer');\n      dealerCardContainer.style.display = \"flex\";\n      dealerDiv.append(dealerCardContainer);\n    }\n    feedback.remove();\n    feedback = document.createElement('h1');\n    feedbackContainer.append(feedback);\n    startGame(1);\n    loseScreen.style.display = 'none';\n    board.style.display = 'block';\n  });\n}\n\n// //have a do loop to create new multChoice games/questions, condition: answer must be right//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/cards.js":
/*!******************************!*\
  !*** ./src/scripts/cards.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deckCreation: function() { return /* binding */ deckCreation; }\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\n\n//I think im done with this portion, cards have two attributes their suit and number/value\n//I dont think I need any methods for the card class\nclass Card {\n  constructor(suit, value) {\n    this.suit = suit;\n    this.value = value;\n  }\n}\n\n// returning a generated deck of cards objects\nfunction deckCreation() {\n  //flatten method with map\n  let deck = _util__WEBPACK_IMPORTED_MODULE_0__.suits.flatMap(suit => {\n    return _util__WEBPACK_IMPORTED_MODULE_0__.values.map(value => {\n      // returns an array of cards of a suit paried with each value in values array\n      return new Card(suit, value);\n    });\n  });\n  return deck.sort(() => 0.5 - Math.random()); // shuffling deck array randomly \n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jYXJkcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QjtBQUM5QjtBQUNBO0FBQ0EsTUFBTUMsSUFBSSxDQUFDO0VBQ1BDLFdBQVdBLENBQUNDLElBQUksRUFBRUMsS0FBSyxFQUFDO0lBQ3BCLElBQUksQ0FBQ0QsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHQSxLQUFLO0VBQ3RCO0FBQ0o7O0FBRUE7QUFDTyxTQUFTQyxZQUFZQSxDQUFBLEVBQUU7RUFDMUI7RUFDQSxJQUFJQyxJQUFJLEdBQUdOLHdDQUFVLENBQUNRLE9BQU8sQ0FBQ0wsSUFBSSxJQUFJO0lBQ2xDLE9BQU9ILHlDQUFXLENBQUNVLEdBQUcsQ0FBQ04sS0FBSyxJQUFJO01BQUU7TUFDOUIsT0FBTyxJQUFJSCxJQUFJLENBQUNFLElBQUksRUFBQ0MsS0FBSyxDQUFDO0lBQy9CLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUVGLE9BQU9FLElBQUksQ0FBQ0ssSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHQyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLXByb2plY3QtcG9rZXItYmxhY2tqYWNrLy4vc3JjL3NjcmlwdHMvY2FyZHMuanM/NDUyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVVElMIGZyb20gXCIuL3V0aWxcIlxuLy9JIHRoaW5rIGltIGRvbmUgd2l0aCB0aGlzIHBvcnRpb24sIGNhcmRzIGhhdmUgdHdvIGF0dHJpYnV0ZXMgdGhlaXIgc3VpdCBhbmQgbnVtYmVyL3ZhbHVlXG4vL0kgZG9udCB0aGluayBJIG5lZWQgYW55IG1ldGhvZHMgZm9yIHRoZSBjYXJkIGNsYXNzXG5jbGFzcyBDYXJkIHtcbiAgICBjb25zdHJ1Y3RvcihzdWl0LCB2YWx1ZSl7XG4gICAgICAgIHRoaXMuc3VpdCA9IHN1aXQ7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG59XG5cbi8vIHJldHVybmluZyBhIGdlbmVyYXRlZCBkZWNrIG9mIGNhcmRzIG9iamVjdHNcbmV4cG9ydCBmdW5jdGlvbiBkZWNrQ3JlYXRpb24oKXtcbiAgICAvL2ZsYXR0ZW4gbWV0aG9kIHdpdGggbWFwXG4gICAgbGV0IGRlY2sgPSBVVElMLnN1aXRzLmZsYXRNYXAoc3VpdCA9PiB7XG4gICAgICAgIHJldHVybiBVVElMLnZhbHVlcy5tYXAodmFsdWUgPT4geyAvLyByZXR1cm5zIGFuIGFycmF5IG9mIGNhcmRzIG9mIGEgc3VpdCBwYXJpZWQgd2l0aCBlYWNoIHZhbHVlIGluIHZhbHVlcyBhcnJheVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBDYXJkKHN1aXQsdmFsdWUpXG4gICAgICAgIH0pXG4gICAgfSkgXG5cbiAgICByZXR1cm4gZGVjay5zb3J0KCgpID0+IDAuNSAtIE1hdGgucmFuZG9tKCkpIC8vIHNodWZmbGluZyBkZWNrIGFycmF5IHJhbmRvbWx5IFxufSJdLCJuYW1lcyI6WyJVVElMIiwiQ2FyZCIsImNvbnN0cnVjdG9yIiwic3VpdCIsInZhbHVlIiwiZGVja0NyZWF0aW9uIiwiZGVjayIsInN1aXRzIiwiZmxhdE1hcCIsInZhbHVlcyIsIm1hcCIsInNvcnQiLCJNYXRoIiwicmFuZG9tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/cards.js\n");

/***/ }),

/***/ "./src/scripts/multiple-choice-game.js":
/*!*********************************************!*\
  !*** ./src/scripts/multiple-choice-game.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ multiChoice; }\n/* harmony export */ });\n/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cards */ \"./src/scripts/cards.js\");\n/* harmony import */ var _player_hand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player-hand */ \"./src/scripts/player-hand.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\n\n\n\nclass multiChoice {\n  constructor() {\n    // this.ctx = canvas.getContext('2d');\n\n    this.deck = (0,_cards__WEBPACK_IMPORTED_MODULE_0__.deckCreation)(); // deck used for multi-choice game\n    this.players = []; //array that will hold all hands of the current game\n    this.hands(3); // adds 3 or 5 players to the game, players array, depending on input\n    this.dealer = new _player_hand__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.deck); // creating dealer hand\n    this.dealer.addToHand.call(this.dealer, 3); // dealer always starts off with 3 cards\n    this.winningHand; // will hold winning hand\n    this.tiedHand;\n    this.outcome; // will hold a str of desc of winning hand\n    this.tie = false;\n  }\n  hands(num) {\n    // function for generating the num of players/hands wanted per game\n    for (let i = 0; i < num; i++) {\n      let player = new _player_hand__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.deck); // creating a hand that also has a reference to the game's deck\n      player.addToHand.call(player, 2); //players/hands will only ever have two cards\n      this.players.push(player); //adding each hand to game's players array\n    }\n  }\n\n  printGame() {\n    // prints all cards in the game(dealer + players)\n    console.log(this);\n    console.log('Game Results', this.winningHand);\n    // console.log(this.dealer.hand)\n    // for(let i = 0; i < this.players.length; i++){\n    //     console.log(this.players[i].hand);\n    // }\n  }\n\n  // need to work on 4-of-kind occurance\n  bestHand(level) {\n    let hand;\n    let currentHand;\n    if (level === 1) {\n      //working!!!\n\n      return this.roundOneToTwo.call(this);\n    } else if (this.dealer.hand.length < 5) {\n      //look for high card, pair, two pair, 3-of-a-kind, 4-of-a-kind\n\n      // console.log('IN ROUNDS 3-4')\n      let handIdx = [0];\n      hand = this.players[0].hand.concat(this.dealer.hand);\n      // console.log('hand');\n      // console.log(hand)\n\n      for (let i = 1; i < this.players.length; i++) {\n        // for(let i = 1; i < 2; i++){ //debugging purposes\n        currentHand = this.players[i].hand.concat(this.dealer.hand);\n        // console.log('current hand')\n        // console.log(currentHand);\n\n        //hashes to count pairs*\n        let handCount = {};\n        let currHandCount = {};\n        for (let i = 0; i < hand.length; i++) {\n          handCount[hand[i].value] ? handCount[hand[i].value].push(hand[i].value) : handCount[hand[i].value] = [hand[i].value];\n          currHandCount[currentHand[i].value] ? currHandCount[currentHand[i].value].push(currentHand[i].value) : currHandCount[currentHand[i].value] = [currentHand[i].value];\n        }\n        // console.log('hashes');\n        // console.log(handCount);\n        // console.log(currHandCount);\n\n        //^^ WORKING\n\n        if (Object.values(handCount).find(ele => ele.length === 4) || Object.values(currHandCount).find(ele => ele.length === 4)) {\n          // at least one player has four of a kind\n\n          let result = this.compareFourOfKind.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else if (Object.values(handCount).find(ele => ele.length === 3) || Object.values(currHandCount).find(ele => ele.length === 3)) {\n          // at least one player has 3 of a kind\n\n          let result = this.compareThreeOfKind.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else if (Object.values(handCount).find(arr => arr.length === 2) || Object.values(currHandCount).find(arr => arr.length === 2)) {\n          let result = this.comparePairs.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else {\n          // last look for highest card, of their 2 cards, WORKING!!!\n          let result = this.compareHandValues(hand, currentHand);\n          if (result == 'tie') {\n            tie = true;\n            handIdx.push(i);\n          } else if (result === currentHand) {\n            tie = false;\n            hand = currentHand;\n            handIdx = [i];\n          }\n        }\n      }\n      return hand.slice(0, 2);\n    } else {\n      //NEED TO WOKR ON THIS!! case: dealer has all 5 cards, now check for flush, straight, etc.\n\n      let result = this.lastRounds.call(this);\n      return result[0];\n    }\n  } //END OF BESTHAND FUNCTION\n\n  //done and working!!\n  roundOneToTwo() {\n    //WORKING!!\n    let hand;\n    let currentHand;\n    hand = this.players[0].hand;\n    for (let i = 1; i < this.players.length; i++) {\n      // for(let i = 1; i < 2; i++){ //debugging purpose \n      currentHand = this.players[i].hand;\n      //booleans checking if any of the two have a pair\n      let handPair = hand[0].value === hand[1].value;\n      let currentHandPair = currentHand[0].value === currentHand[1].value;\n      if (handPair || currentHandPair) {\n        // at least one has a pair\n        if (handPair && currentHandPair) {\n          // if both, checking for highest card\n          if (hand[0].value === currentHand[0].value) {\n            this.tie = true;\n            this.outcome = `Tie! Between ${this.players.map(player => {\n              return player.hand;\n            }).indexOf(hand) + 1} and ${this.players.map(player => {\n              return player.hand;\n            }).indexOf(currentHand) + 1}.`;\n            this.tiedHand = currentHand;\n          } else {\n            hand = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand[0].value) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currentHand[0].value) ? hand : currentHand;\n            this.outcome = `Hand ${this.players.map(player => {\n              return player.hand;\n            }).indexOf(hand) + 1} has the highest value pair.`;\n            this.true = false;\n          }\n        } else {\n          hand = handPair ? hand : currentHand;\n          this.outcome = `Hand ${this.players.map(player => {\n            return player.hand;\n          }).indexOf(hand) + 1} has a pair.`;\n          this.tie = false;\n        }\n      } else {\n        // no pair, just checking for highest card\n        let result = this.compareHandValues(hand, currentHand);\n        if (result === 'tie') {\n          this.tie = true;\n          this.outcome = `There is a tie! Between hand ${this.players.map(player => {\n            return player.hand;\n          }).indexOf(hand) + 1} and hand ${this.players.map(player => {\n            return player.hand;\n          }).indexOf(currentHand) + 1}.`;\n          this.tiedHand = currentHand;\n        } else if (result === currentHand) {\n          hand = result;\n          this.tie = false;\n          this.outcome = `Hand ${this.players.map(player => {\n            return player.hand;\n          }).indexOf(hand) + 1} has the highest value card.`;\n          // console.log(hand)\n          // console.log((this.players.map(player => {return player.hand}).indexOf(hand)))\n        } else {\n          if (!this.tie) {\n            this.outcome = `Hand ${this.players.map(player => {\n              return player.hand;\n            }).indexOf(hand) + 1} has the highest value card.`;\n          }\n        }\n      }\n    }\n    this.winningHand = hand;\n    return this;\n    // end of game logic for round 1-2\n  }\n  //done and working!!\n  compareHandValues(hand1, hand2) {\n    // WORKING!!\n    let hand1Max = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[0].value) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[1].value) ? _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[0].value) : _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[1].value);\n    let hand2Max = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[0].value) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[1].value) ? _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[0].value) : _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[1].value);\n    let result;\n    if (hand1Max === hand2Max) {\n      // if(hand1[0].value===hand2[0].value){\n      //     if(UTIL.values.indexOf(hand1[1].value) < UTIL.values.indexOf(hand2[1].value)) result = hand2\n      // }else if(hand1[0].value===hand2[1].value){\n      //     if(UTIL.values.indexOf(hand1[1].value) < UTIL.values.indexOf(hand2[0].value)) result = hand2\n      // }else if(hand1[1].value === hand2[0].value){\n      //     if(UTIL.values.indexOf(hand1[0].value) < UTIL.values.indexOf(hand2[1].value)) result = hand2\n      // }else if(hand1[1].value === hand2[1].value){ \n      //     if(UTIL.values.indexOf(hand1[0].value) < UTIL.values.indexOf(hand2[0].value)) result = hand2\n      // }else{\n      //     result = 'tie';\n      // }\n      result = 'tie';\n    } else if (hand1Max < hand2Max) {\n      result = hand2;\n    }\n    return result;\n  }\n\n  //need to work on this\n  lastRounds() {\n    // check for all possible hands then best, NEED TO WORK ON THIS!\n    let dealerHand = this.dealer.hand;\n    // console.log(dealerHand)\n    let hand = this.players[0].hand.concat(dealerHand);\n    // console.log(this.players[0].hand);\n\n    for (let i = 1; i < this.players.length; i++) {\n      let currentHand = this.players[i].hand.concat(dealerHand);\n      // need logic to check what kind of hand they have;\n    }\n\n    // if(tie) console.log(tie)\n    return hand;\n  }\n\n  //done, working!!\n  compareThreeOfKind(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    //done, working?\n    // console.log('in compareThreeOfKind');\n\n    let handThreeOfKind = Object.values(handCount).find(arr => arr.length === 3);\n    let currHandThreeOfKind = Object.values(currHandCount).find(arr => arr.length === 3);\n    if (handThreeOfKind && currHandThreeOfKind) {\n      //check if anyone has another 3-of-kind\n      if (Object.values(handCount).find(ele => ele.length === 3) || Object.values(currHandCount).find(ele => ele.length === 3)) {\n        let handThreeOfKindSecond = Object.values(handCount).find(arr => arr.length === 3 && arr[0] !== handThreeOfKind[0]);\n        let currHandThreeOfKindSecond = Object.values(currHandCount).find(arr => arr.length === 3 && arr[0] !== currHandThreeOfKind[0]);\n        if (handThreeOfKindSecond && currHandThreeOfKindSecond) {\n          let handBestThreeOfKind = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKindSecond[0]) ? handThreeOfKind : handThreeOfKindSecond;\n          let currHandBestThreeOfKind = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0]) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKindSecond[0]) ? currHandThreeOfKind : currHandThreeOfKindSecond;\n          if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handBestThreeOfKind[0]) === TIL.values.indexOf(currHandBestThreeOfKind[0])) {\n            tie = true;\n          } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handBestThreeOfKind[0]) < TIL.values.indexOf(currHandBestThreeOfKind[0])) {\n            hand = currentHand;\n            tie = false;\n          }\n        } else {\n          if (currHandCount) {\n            hand = currentHand;\n            tie = false;\n          }\n        }\n      } else if\n        //check if anyone has a pair as well\n      (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0])) {\n        let handPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]);\n        let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0]);\n        if (handPair && currHandPair) {\n          //what if a hand has two pairs\n          //both have 3-of-kind & pair, check if for greatest 3-of-kind\n          if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) === _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0])) {\n            //save 3-of-kind cards, then check for greatest pair\n            if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handPair[0]) === _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandPair[0])) {\n              tie = true;\n            } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handPair[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandPair[0])) {\n              hand = currentHand;\n              tie = false;\n            }\n          } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0])) {\n            hand = currentHand;\n            tie = false;\n          }\n        } else {\n          //done\n          if (currHandPair) {\n            hand = currHandCount;\n            tie = false;\n          }\n        }\n      } else if (handThreeOfKind[0] === currHandThreeOfKind[0]) {\n        tie = true;\n      } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0])) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    } else {\n      //done\n      if (currHandThreeOfKind) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    }\n\n    return [hand, handIdx, tie];\n  }\n\n  //still need to work on this\n  compareFourOfKind(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    // console.log('in compareFourOfKind')\n    let handFourOfKind = Object.values(handCount).find(arr => arr.length === 4);\n    let currHandFourOfKind = Object.values(currHandCount).find(arr => arr.length === 4);\n    if (handFourOfKind && currHandFourOfKind) {\n      if (handFourOfKind[0] === currHandFourOfKind[0]) {\n        //check if anyone has a pair as well\n        if (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handFourOfKind[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandFourOfKind[0])) {\n          let handPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]);\n          let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0]);\n          if (handPair && currHandPair) {\n            if (handPair[0] === currHandPair[0]) {\n              tie = true;\n            } else {\n              if (currHandPair) {\n                hand = currentHand;\n                tie = false;\n              }\n            }\n          } else {\n            if (currHandPair) {\n              hand = currHandCount;\n              tie = false;\n            }\n          }\n        } else {\n          tie = true;\n          // handIdx.push(i);\n        }\n      } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0])) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    } else {\n      if (currHandThreeOfKind) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    }\n\n    return [hand, handIdx, tie];\n  }\n\n  //done and working!!!\n  comparePairs(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    // working!!\n    let handPair = Object.values(handCount).find(arr => arr.length === 2);\n    let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2);\n    // console.log(handPair)\n    // console.log(currHandPair)\n\n    //check if pair is amoung only dealer's hand, still need to work on this\n    if (handPair && currHandPair) {\n      // both have a pair\n      // console.log('hi')\n\n      if (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handPair[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandPair[0])) {\n        //atleast one has two pairs, WOKRING!!!\n        //check who has the second pair if not both\n        let secondHandPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handPair[0]);\n        let secondCurrHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandPair[0]);\n        // console.log(secondHandPair);\n        // console.log(secondCurrHandPair);\n\n        if (secondHandPair && secondCurrHandPair) {\n          if (secondHandPair[0] === secondCurrHandPair[0]) {\n            tie = true;\n            // handIdx.push(i);\n          } else {\n            if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(secondHandPair[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(secondCurrHandPair[0])) {\n              hand = currentHand;\n              tie = false;\n              // handCount = [i];\n            }\n          }\n        } else {\n          // WORKING!!\n          if (secondCurrHandPair) {\n            hand = currentHand;\n            tie = false;\n            // handIdx = [i];\n          }\n        }\n      } else {\n        // look for the pair with the highest value, WOKRING!!!\n        if (handPair[0] === currHandPair[0]) {\n          tie = true;\n          // handIdx.push(i);\n          // console.log(tie);\n        } else {\n          if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandPair[0]) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handPair[0])) {\n            tie = false;\n            hand = currentHand;\n            // handIdx = [i];\n          }\n        }\n      }\n    } else {\n      // check if currHand is the one with the pair, WORKING!!!!\n      // console.log('one pair')\n      if (currHandPair) {\n        tie = false;\n        hand = currentHand;\n        // handIdx = [i];\n      }\n    }\n\n    // console.log('in ComparePairs')\n    // console.log(hand);\n    return [hand, handIdx, tie];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/multiple-choice-game.js\n");

/***/ }),

/***/ "./src/scripts/player-hand.js":
/*!************************************!*\
  !*** ./src/scripts/player-hand.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PlayerHand; }\n/* harmony export */ });\nclass PlayerHand {\n  // fine, dont touch\n  constructor(deck) {\n    this.deck = deck; // reference to the game's card deck\n    this.hand = []; // array that will hold this player's cards\n  }\n\n  addToHand(num) {\n    // maybe add a random way either pop/shift\n    //take a card from deck and add to hand, remove card from deck\n    while (num > 0) {\n      this.hand.push(this.deck.shift());\n      num--;\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXItaGFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQ2UsTUFBTUEsVUFBVTtFQUFFO0VBQzdCQyxXQUFXQSxDQUFDQyxJQUFJLEVBQUM7SUFDYixJQUFJLENBQUNBLElBQUksR0FBR0EsSUFBSSxDQUFDLENBQUM7SUFDbEIsSUFBSSxDQUFDQyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7RUFDcEI7O0VBR0FDLFNBQVNBLENBQUNDLEdBQUcsRUFBQztJQUFFO0lBQ1o7SUFDQSxPQUFNQSxHQUFHLEdBQUcsQ0FBQyxFQUFDO01BQ1YsSUFBSSxDQUFDRixJQUFJLENBQUNHLElBQUksQ0FBQyxJQUFJLENBQUNKLElBQUksQ0FBQ0ssS0FBSyxDQUFDLENBQUMsQ0FBQztNQUNqQ0YsR0FBRyxFQUFFO0lBQ1Q7RUFDSjtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMtcHJvamVjdC1wb2tlci1ibGFja2phY2svLi9zcmMvc2NyaXB0cy9wbGF5ZXItaGFuZC5qcz9hYjllIl0sInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVySGFuZHsgLy8gZmluZSwgZG9udCB0b3VjaFxuICAgIGNvbnN0cnVjdG9yKGRlY2spe1xuICAgICAgICB0aGlzLmRlY2sgPSBkZWNrOyAvLyByZWZlcmVuY2UgdG8gdGhlIGdhbWUncyBjYXJkIGRlY2tcbiAgICAgICAgdGhpcy5oYW5kID0gW107IC8vIGFycmF5IHRoYXQgd2lsbCBob2xkIHRoaXMgcGxheWVyJ3MgY2FyZHNcbiAgICB9XG5cblxuICAgIGFkZFRvSGFuZChudW0peyAvLyBtYXliZSBhZGQgYSByYW5kb20gd2F5IGVpdGhlciBwb3Avc2hpZnRcbiAgICAgICAgLy90YWtlIGEgY2FyZCBmcm9tIGRlY2sgYW5kIGFkZCB0byBoYW5kLCByZW1vdmUgY2FyZCBmcm9tIGRlY2tcbiAgICAgICAgd2hpbGUobnVtID4gMCl7XG4gICAgICAgICAgICB0aGlzLmhhbmQucHVzaCh0aGlzLmRlY2suc2hpZnQoKSk7XG4gICAgICAgICAgICBudW0tLTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuIl0sIm5hbWVzIjpbIlBsYXllckhhbmQiLCJjb25zdHJ1Y3RvciIsImRlY2siLCJoYW5kIiwiYWRkVG9IYW5kIiwibnVtIiwicHVzaCIsInNoaWZ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/player-hand.js\n");

/***/ }),

/***/ "./src/scripts/util.js":
/*!*****************************!*\
  !*** ./src/scripts/util.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cardImgs: function() { return /* binding */ cardImgs; },\n/* harmony export */   questions: function() { return /* binding */ questions; },\n/* harmony export */   rankingHands: function() { return /* binding */ rankingHands; },\n/* harmony export */   suits: function() { return /* binding */ suits; },\n/* harmony export */   values: function() { return /* binding */ values; }\n/* harmony export */ });\n//variables for creation of cards/deck and scoring purposes\nconst suits = ['♣', '♦', '♥', '♠'];\nconst values = ['A', 'K', 'Q', 'J', 10, 9, 8, 7, 6, 5, 4, 3, 2].reverse();\n// export const letterValue = {'A': 14, 'K': 13, 'Q': 12, 'J': 11}\nconst rankingHands = ['high card', 'pair', 'two pairs', 'three of a kind', 'striaght', 'flush', 'full house', 'four of a kind', 'striaght flush', 'royal flush'];\nconst cardImgs = [[{\n  face: 2,\n  img: 'images/2-clover.png'\n}, {\n  face: 3,\n  img: 'images/3-clover.png'\n}, {\n  face: 4,\n  img: 'images/4-clover.png'\n}, {\n  face: 5,\n  img: 'images/5-clover.png'\n}, {\n  face: 6,\n  img: 'images/6-clover.png'\n}, {\n  face: 7,\n  img: 'images/7-clover.png'\n}, {\n  face: 8,\n  img: 'images/8-clover.png'\n}, {\n  face: 9,\n  img: 'images/9-clover.png'\n}, {\n  face: 10,\n  img: 'images/10-clover.png'\n}, {\n  face: 'J',\n  img: 'images/J-clover.png'\n}, {\n  face: 'Q',\n  img: 'images/Q-clover.png'\n}, {\n  face: 'K',\n  img: 'images/K-clover.png'\n}, {\n  face: 'A',\n  img: 'images/A-diamond.png'\n}], [{\n  face: 2,\n  img: 'images/2-diamond.png'\n}, {\n  face: 3,\n  img: 'images/3-diamond.png'\n}, {\n  face: 4,\n  img: 'images/4-diamond.png'\n}, {\n  face: 5,\n  img: 'images/5-diamond.png'\n}, {\n  face: 6,\n  img: 'images/6-diamond.png'\n}, {\n  face: 7,\n  img: 'images/7-diamond.png'\n}, {\n  face: 8,\n  img: 'images/8-diamond.png'\n}, {\n  face: 9,\n  img: 'images/9-diamond.png'\n}, {\n  face: 10,\n  img: 'images/10-diamond.png'\n}, {\n  face: 'J',\n  img: 'images/J-diamond.png'\n}, {\n  face: 'Q',\n  img: 'images/Q-diamond.png'\n}, {\n  face: 'K',\n  img: 'images/K-diamond.png'\n}, {\n  face: 'A',\n  img: 'images/A-diamond.png'\n}], [{\n  face: 2,\n  img: 'images/2-heart.png'\n}, {\n  face: 3,\n  img: 'images/3-heart.png'\n}, {\n  face: 4,\n  img: 'images/4-heart.png'\n}, {\n  face: 5,\n  img: 'images/5-heart.png'\n}, {\n  face: 6,\n  img: 'images/6-heart.png'\n}, {\n  face: 7,\n  img: 'images/7-heart.png'\n}, {\n  face: 8,\n  img: 'images/8-heart.png'\n}, {\n  face: 9,\n  img: 'images/9-heart.png'\n}, {\n  face: 10,\n  img: 'images/10-heart.png'\n}, {\n  face: 'J',\n  img: 'images/J-heart.png'\n}, {\n  face: 'Q',\n  img: 'images/Q-heart.png'\n}, {\n  face: 'K',\n  img: 'images/K-heart.png'\n}, {\n  face: 'A',\n  img: 'images/A-heart.png'\n}], [{\n  face: 2,\n  img: 'images/2-spade.png'\n}, {\n  face: 3,\n  img: 'images/3-spade.png'\n}, {\n  face: 4,\n  img: 'images/4-spade.png'\n}, {\n  face: 5,\n  img: 'images/5-spade.png'\n}, {\n  face: 6,\n  img: 'images/6-spade.png'\n}, {\n  face: 7,\n  img: 'images/7-spade.png'\n}, {\n  face: 8,\n  img: 'images/8-spade.png'\n}, {\n  face: 9,\n  img: 'images/9-clover.png'\n}, {\n  face: 10,\n  img: 'images/10-spade.png'\n}, {\n  face: 'J',\n  img: 'images/J-spade.png'\n}, {\n  face: 'Q',\n  img: 'images/Q-spade.png'\n}, {\n  face: 'K',\n  img: 'images/K-spade.png'\n}, {\n  face: 'A',\n  img: 'images/A-spade.png'\n}]];\nconst questions = [['Which hand is the strongest hand?'], ['Given the dealers hand, which hand now has the strongest hand?'], ['Given that all cards have been dealt, which hand has the strongest hand?']];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/util.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0LXBva2VyLWJsYWNramFjay8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;