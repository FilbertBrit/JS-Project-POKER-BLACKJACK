/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_cards_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/cards.js */ \"./src/scripts/cards.js\");\n/* harmony import */ var _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/util.js */ \"./src/scripts/util.js\");\n// import multiChoice from \"./scripts/multiple-choice-game.js\"\n// const PlayerHand = require('./scripts/player-hand.js');\n// import * as PlayerHand from \"./scripts/player-hand.js\"\n // importing function that created the deck\n // importing arrays of card values\n\n// const canvas = document.getElementById(\"canvas\")\n// canvas.width = 500;\n// canvas.height = 500;\n\nclass multiChoice {\n  constructor() {\n    // this.ctx = canvas.getContext('2d');\n\n    this.deck = (0,_scripts_cards_js__WEBPACK_IMPORTED_MODULE_0__.deckCreation)(); // deck used for multi-choice game\n    this.players = []; //array that will hold all hands of the current game\n    this.dealer = new PlayerHand(this.deck);\n    this.dealer.addToHand.call(this.dealer, 3); // dealer always starts off with 3 cards\n  }\n\n  hands(num) {\n    // function for generating the num of players/hands wanted per game\n    for (let i = 0; i < num; i++) {\n      let player = new PlayerHand(this.deck); // creating a hand that also has a reference to the game's deck\n      player.addToHand.call(player, 2); //players/hands will only ever have two cards\n      this.players.push(player); //adding each hand to game's players array\n    }\n  }\n\n  printGame() {\n    // prints all cards in the game(dealer + players)\n    console.log(this.dealer.hand);\n    for (let i = 0; i < this.players.length; i++) {\n      console.log(this.players[i].hand);\n    }\n  }\n  bestHand(round) {\n    let tie = false;\n    let hand;\n    let currentHand;\n    if (round < 3) {\n      //first round only check players cards not dealers\n      // debugger\n      hand = this.players[0].hand;\n      // for(let i = 1; i < this.players.length; i++){\n      for (let i = 1; i < 2; i++) {\n        currentHand = this.players[i].hand;\n        //booleans checking if any of the two have a pair\n        let handPair = hand[0].value === hand[1].value;\n        let currentHandPair = currentHand[0].value === currentHand[1].value;\n        if (handPair || currentHandPair) {\n          // at least one has a pair\n          if (handPair && currentHandPair) {\n            // if both, checking for highest card\n            if (hand[0].value === currentHand[0].value) {\n              tie = true;\n            } else {\n              hand = _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand[0].value) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currentHand[0].value) ? hand : currentHand;\n            }\n          } else {\n            hand = handPair ? hand : currentHand;\n          }\n        } else {\n          // no pair, just checking for highest card\n          let result = this.compareHandValues(hand, currentHand);\n          if (result === 'tie') {\n            tie = true;\n          } else if (result === currentHand) {\n            hand = result;\n          }\n        }\n      }\n      if (tie) console.log(\"tie\");\n      return hand;\n      // end of game logic for round 1-2\n    } else if (this.dealer.hand.length < 5) {\n      //look for high card, pair, two pair, 3-of-a-kind, 4-of-a-kind\n      let handIdx = [0];\n      hand = this.players[0].hand.concat(this.dealer.hand);\n      console.log('hand');\n      console.log(hand);\n\n      // for(let i = 1; i < this.players.length; i++){\n      for (let i = 1; i < 2; i++) {\n        //debugging purposes\n        currentHand = this.players[i].hand.concat(this.dealer.hand);\n        console.log('current hand');\n        console.log(currentHand);\n\n        //hashes to count pairs*\n        let handCount = {};\n        let currHandCount = {};\n        for (let i = 0; i < hand.length; i++) {\n          handCount[hand[i].value] ? handCount[hand[i].value].push(i) : handCount[hand[i].value] = [i];\n          currHandCount[currentHand[i].value] ? currHandCount[currentHand[i].value].push(i) : currHandCount[currentHand[i].value] = [i];\n        }\n        console.log('hashes');\n        console.log(handCount);\n        console.log(currHandCount);\n        // console.log(Object.values(handCount)[0])\n        // console.log(Object.values(handCount).find((arr) => arr.length === 2))\n\n        // if (Object.values(handCount).find((ele) => ele.length === 4) || Object.values(currHandCount).find((ele) => ele.length === 4)){ // at least one player has four of a kind\n        //     let handFourOfKind = Object.values(handCount).find((ele) => ele.length === 4);\n        //     let currHandFourOfKind = Object.values(currHandCount).find((ele) => ele.length === 4);\n\n        //     if(handFourOfKind && currHandFourOfKind){ //case: both players have 4 of a kind\n        //         if(handFourOfKind[0] === currHandFourOfKind[0]){\n        //             tie = true;\n        //             handIdx.push(i);\n        //         }else if (UTIL.values.indexOf(handFourOfKind[0]) < UTIL.values.indexOf(currHandFourOfKind[0])){\n        //             hand = currentHand;\n        //             handIdx[0] = i;\n        //         }\n        //     }else{ // case: only one player has four of a kind\n        //         if (currHandFourOfKind){\n        //             hand = currentHand;\n        //             handIdx[0] = i;\n        //         } \n        //     }\n        // }else if (Object.values(handCount).find((ele) => ele.length === 3) || Object.values(currHandCount).find((ele) => ele.length === 3)){ // at least one player has 3 of a kind\n        //     let handThreeOfKind = Object.values(handCount).find((ele) => ele.length === 3);\n        //     let currHandThreeOfKind = Object.values(currHandCount).find((ele) => ele.length === 3);\n\n        //     if(handThreeOfKind && currHandThreeOfKind){\n        //         if(handThreeOfKind[0] === currHandThreeOfKind[0]){\n        //             tie = true;\n        //             handIdx.push(i);\n        //         }else if (UTIL.values.indexOf(handThreeOfKind[0]) < UTIL.values.indexOf(currHandThreeOfKind[0])){\n        //             hand = currentHand;\n        //             handIdx[0] = i;\n        //         }\n        //     }else{\n        //         if (currHandThreeOfKind){\n        //             hand = currentHand;\n        //             handIdx[0] = i;\n        //         }\n        //     }\n\n        // }else if (Object.values(handCount).find((arr) => arr.length > 2) || Object.values(currHandCount).find((arr) => arr.length > 2)){\n        if (Object.values(handCount).find(arr => arr.length === 2) || Object.values(currHandCount).find(arr => arr.length === 2)) {\n          console.log('here');\n          let handPair = Object.values(handCount).find(arr => arr.length === 2);\n          let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2);\n          console.log(handPair);\n          console.log(currHandPair);\n          if (handPair && currHandPair) {\n            // both have a pair\n            console.log('hi');\n            if (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handPair[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandPair[0])) {\n              //atleast one has two pairs\n              //check who has the second pair if not both\n              let secondHandPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handPair[0]);\n              let secondCurrHandPair = Object.values(currHandCount).find(arr => arr.length > 2);\n              if (secondHandPair && secondCurrHandPair) {\n                // check for highest value\n                // handMaxPair = UTIL.values.indexOf(handPair[0]) > UTIL.values.indexOf() ? : ;\n              } else {\n                if (secondCurrHandPair) {\n                  hand = currentHand;\n                  tie = false;\n                  handIdx = i;\n                }\n              }\n            } else {\n              // look for the pair with the highest value\n              if (handPair[0] === currHandPair[0]) {\n                tie = true;\n                handIdx.push(i);\n              } else {\n                if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandPair[0]) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handPair[0])) {\n                  tie = false;\n                  hand = currentHand;\n                  handIdx[0] = i;\n                }\n              }\n            }\n          } else {// check if currHand is the one with the pair\n            // console('one pair')\n            // if (currHandPair){\n            //     tie = false;\n            //     hand = currentHand;\n            //     handIdx[0] = i;\n            // }\n          }\n          console.log(hand);\n        } else {\n          // last look for highest card, of their 2 cards, WORKING!!!\n          // console.log('testing...')\n\n          //can make this a helperfunction\n          let handRank = hand.slice(0, 2).map(card => _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(card.value));\n          let handMax = Math.max(...handRank);\n          // console.log(handRank)\n          // console.log(handMax)\n          let currHandRank = currentHand.slice(0, 2).map(card => _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(card.value));\n          let currHandMax = Math.max(...currHandRank);\n          // console.log(currHandRank)\n          // console.log(currHandMax)\n          if (handMax === currHandMax) {\n            tie = true;\n            handIdx.push(i);\n          } else if (handMax < currHandMax) {\n            tie = false;\n            hand = currentHand;\n            handIdx[0] = i;\n          }\n\n          // console.log('no pairs, chechking for highest card')\n          // console.log(hand);\n          // console.log(tie);\n        }\n        // console.log(Object.values(handCount))\n        // console.log(handCount)\n        // console.log(currHandCount)\n        // console.log(hand);\n        // console.log(hand.map(card => UTIL.values.indexOf(card.value)))\n        // console.log(Math.max(...(hand.map(card => UTIL.values.indexOf(card.value)))))\n      }\n      // return this.players[handIdx].hand;\n    } else {\n      //case: dealer has all 5 cards, now check for flush, straight, etc.\n      let dealerHand = this.dealer.hand;\n      // console.log(dealerHand)\n      hand = this.players[0].hand.concat(dealerHand);\n      // console.log(this.players[0].hand);\n\n      for (let i = 1; i < this.players.length; i++) {\n        currentHand = this.players[i].hand.concat(dealerHand);\n        // need logic to check what kind of hand they have;\n      }\n\n      if (tie) console.log(tie);\n      return hand;\n    } //end of all other rounds logic\n  }\n\n  compareHandValues(hand1, hand2) {\n    let hand1Max = _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand1[0].value) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand1[1].value) ? _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand1[0].value) : _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand1[1].value);\n    let hand2Max = _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand2[0].value) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand2[1].value) ? _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand2[0].value) : _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand2[1].value);\n    let result;\n    if (hand1Max === hand2Max) {\n      result = 'tie';\n    } else if (hand1Max > hand2Max) {\n      result = hand1;\n    } else {\n      result = hand2;\n    }\n    return result;\n  }\n}\nclass PlayerHand {\n  constructor(deck) {\n    this.deck = deck; // reference to the game's card deck\n    this.hand = []; // array that will hold this player's cards\n  }\n\n  addToHand(num) {\n    //take a card from deck and add to hand, remove card from deck\n    while (num > 0) {\n      this.hand.push(this.deck.shift());\n      num--;\n    }\n  }\n}\nlet game = new multiChoice();\ngame.hands.call(game, 5);\nconsole.log(game);\ngame.printGame.call(game, 5);\nconsole.log(\"Winning card\");\nconsole.log(game.bestHand.call(game, 2));\n\n///build a database with possible questions to query for to use during each round//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/cards.js":
/*!******************************!*\
  !*** ./src/scripts/cards.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deckCreation: function() { return /* binding */ deckCreation; }\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\n\n//I think im done with this portion, cards have two attributes their suit and number/value\n//I dont think I need any methods for the card class\nclass Card {\n  constructor(suit, value) {\n    this.suit = suit;\n    this.value = value;\n  }\n}\n\n// returning a generated deck of cards\nfunction deckCreation() {\n  //variables for creation of cards/deck\n  // const suits = ['♣', '♦', '♥', '♠']\n  // const values = ['A', 'K', 'Q', 'J', '10', '9', '8', '7', '6', '5', '4', '3', '2']\n  //flatten method with map\n  let deck = _util__WEBPACK_IMPORTED_MODULE_0__.suits.flatMap(suit => {\n    return _util__WEBPACK_IMPORTED_MODULE_0__.values.map(value => {\n      // returns an array of cards of a suit paried with each value in values array\n      return new Card(suit, value);\n    });\n  });\n  return deck.sort(() => 0.5 - Math.random()); // shuffling deck array randomly \n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jYXJkcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QjtBQUM5QjtBQUNBO0FBQ0EsTUFBTUMsSUFBSSxDQUFDO0VBQ1BDLFdBQVdBLENBQUNDLElBQUksRUFBRUMsS0FBSyxFQUFDO0lBQ3BCLElBQUksQ0FBQ0QsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHQSxLQUFLO0VBQ3RCO0FBQ0o7O0FBRUE7QUFDTyxTQUFTQyxZQUFZQSxDQUFBLEVBQUU7RUFDMUI7RUFDQTtFQUNBO0VBQ0E7RUFDQSxJQUFJQyxJQUFJLEdBQUdOLHdDQUFVLENBQUNRLE9BQU8sQ0FBQ0wsSUFBSSxJQUFJO0lBQ2xDLE9BQU9ILHlDQUFXLENBQUNVLEdBQUcsQ0FBQ04sS0FBSyxJQUFJO01BQUU7TUFDOUIsT0FBTyxJQUFJSCxJQUFJLENBQUNFLElBQUksRUFBQ0MsS0FBSyxDQUFDO0lBQy9CLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUVGLE9BQU9FLElBQUksQ0FBQ0ssSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHQyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLXByb2plY3QtcG9rZXItYmxhY2tqYWNrLy4vc3JjL3NjcmlwdHMvY2FyZHMuanM/NDUyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVVElMIGZyb20gXCIuL3V0aWxcIlxuLy9JIHRoaW5rIGltIGRvbmUgd2l0aCB0aGlzIHBvcnRpb24sIGNhcmRzIGhhdmUgdHdvIGF0dHJpYnV0ZXMgdGhlaXIgc3VpdCBhbmQgbnVtYmVyL3ZhbHVlXG4vL0kgZG9udCB0aGluayBJIG5lZWQgYW55IG1ldGhvZHMgZm9yIHRoZSBjYXJkIGNsYXNzXG5jbGFzcyBDYXJkIHtcbiAgICBjb25zdHJ1Y3RvcihzdWl0LCB2YWx1ZSl7XG4gICAgICAgIHRoaXMuc3VpdCA9IHN1aXQ7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG59XG5cbi8vIHJldHVybmluZyBhIGdlbmVyYXRlZCBkZWNrIG9mIGNhcmRzXG5leHBvcnQgZnVuY3Rpb24gZGVja0NyZWF0aW9uKCl7XG4gICAgLy92YXJpYWJsZXMgZm9yIGNyZWF0aW9uIG9mIGNhcmRzL2RlY2tcbiAgICAvLyBjb25zdCBzdWl0cyA9IFsn4pmjJywgJ+KZpicsICfimaUnLCAn4pmgJ11cbiAgICAvLyBjb25zdCB2YWx1ZXMgPSBbJ0EnLCAnSycsICdRJywgJ0onLCAnMTAnLCAnOScsICc4JywgJzcnLCAnNicsICc1JywgJzQnLCAnMycsICcyJ11cbiAgICAvL2ZsYXR0ZW4gbWV0aG9kIHdpdGggbWFwXG4gICAgbGV0IGRlY2sgPSBVVElMLnN1aXRzLmZsYXRNYXAoc3VpdCA9PiB7XG4gICAgICAgIHJldHVybiBVVElMLnZhbHVlcy5tYXAodmFsdWUgPT4geyAvLyByZXR1cm5zIGFuIGFycmF5IG9mIGNhcmRzIG9mIGEgc3VpdCBwYXJpZWQgd2l0aCBlYWNoIHZhbHVlIGluIHZhbHVlcyBhcnJheVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBDYXJkKHN1aXQsdmFsdWUpXG4gICAgICAgIH0pXG4gICAgfSkgXG5cbiAgICByZXR1cm4gZGVjay5zb3J0KCgpID0+IDAuNSAtIE1hdGgucmFuZG9tKCkpIC8vIHNodWZmbGluZyBkZWNrIGFycmF5IHJhbmRvbWx5IFxufSJdLCJuYW1lcyI6WyJVVElMIiwiQ2FyZCIsImNvbnN0cnVjdG9yIiwic3VpdCIsInZhbHVlIiwiZGVja0NyZWF0aW9uIiwiZGVjayIsInN1aXRzIiwiZmxhdE1hcCIsInZhbHVlcyIsIm1hcCIsInNvcnQiLCJNYXRoIiwicmFuZG9tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/cards.js\n");

/***/ }),

/***/ "./src/scripts/util.js":
/*!*****************************!*\
  !*** ./src/scripts/util.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rankingHands: function() { return /* binding */ rankingHands; },\n/* harmony export */   suits: function() { return /* binding */ suits; },\n/* harmony export */   values: function() { return /* binding */ values; }\n/* harmony export */ });\n//variables for creation of cards/deck and scoring purposes\nconst suits = ['♣', '♦', '♥', '♠'];\nconst values = ['A', 'K', 'Q', 'J', 10, 9, 8, 7, 6, 5, 4, 3, 2].reverse();\n// export const letterValue = {'A': 14, 'K': 13, 'Q': 12, 'J': 11}\nconst rankingHands = ['high card', 'pair', 'two pairs', 'three of a kind', 'striaght', 'flush', 'full house', 'four of a kind', 'striaght flush', 'royal flush'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91dGlsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUNJO0FBQ0csTUFBTUEsS0FBSyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO0FBQ2xDLE1BQU1DLE1BQU0sR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUMsQ0FBQztBQUNoRjtBQUNPLE1BQU1DLFlBQVksR0FBRyxDQUFDLFdBQVcsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGdCQUFnQixFQUFFLGFBQWEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLXByb2plY3QtcG9rZXItYmxhY2tqYWNrLy4vc3JjL3NjcmlwdHMvdXRpbC5qcz82OTRiIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC8vdmFyaWFibGVzIGZvciBjcmVhdGlvbiBvZiBjYXJkcy9kZWNrIGFuZCBzY29yaW5nIHB1cnBvc2VzXG5leHBvcnQgY29uc3Qgc3VpdHMgPSBbJ+KZoycsICfimaYnLCAn4pmlJywgJ+KZoCddXG5leHBvcnQgY29uc3QgdmFsdWVzID0gWydBJywgJ0snLCAnUScsICdKJywgMTAsIDksIDgsIDcsIDYsIDUsIDQsIDMsIDJdLnJldmVyc2UoKTtcbi8vIGV4cG9ydCBjb25zdCBsZXR0ZXJWYWx1ZSA9IHsnQSc6IDE0LCAnSyc6IDEzLCAnUSc6IDEyLCAnSic6IDExfVxuZXhwb3J0IGNvbnN0IHJhbmtpbmdIYW5kcyA9IFsnaGlnaCBjYXJkJywgJ3BhaXInLCAndHdvIHBhaXJzJywgJ3RocmVlIG9mIGEga2luZCcsICdzdHJpYWdodCcsICdmbHVzaCcsICdmdWxsIGhvdXNlJywgJ2ZvdXIgb2YgYSBraW5kJywgJ3N0cmlhZ2h0IGZsdXNoJywgJ3JveWFsIGZsdXNoJ107XG4iXSwibmFtZXMiOlsic3VpdHMiLCJ2YWx1ZXMiLCJyZXZlcnNlIiwicmFua2luZ0hhbmRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/util.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0LXBva2VyLWJsYWNramFjay8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;