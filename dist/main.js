/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_multiple_choice_game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/multiple-choice-game.js */ \"./src/scripts/multiple-choice-game.js\");\n/* harmony import */ var _scripts_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/util */ \"./src/scripts/util.js\");\n\n\n// import GameView from \"./scripts/game-view.js\";\n\nconst startMessage = 'Welcome to Poker Pro! Here you can learn how to play poker. There are three distinct levels but an endless amount of rounds within each level. The goal for each level is to select the strongest hand amoung the player hands. The first level will consist of only 3 different player hands, hands that have only 2 cards. The second level will include a dealers hand, a hand of 3-4 cards, cards that player hands can use to strengthen their hand. Lastly, the final level will include the complete hand of the dealer, 5 cards, cards that player hands can also use to strengthen their hand. Again the goal is select the STRONGEST hand. Good Luck!!! READY?!';\nlet answerMessage = ['Correct!', 'Not quite.'];\nlet level = 1;\nlet lost = false;\nlet streak = 0;\nlet game;\nconst scoringDiv = document.getElementById('scoring'); //div holding scoring sheet\nconst board = document.getElementById('board'); //div holding game boards\nconst dealerDiv = document.getElementById('dealer-cards'); //div that holds dealers cards\nconst feedbackContainer = document.getElementById('feedback-container');\nconst score = document.getElementById('score');\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  scoringDiv.style.display = \"none\"; //blocks div from displaying contents\n  startGame(level);\n  document.getElementById(\"start-message\").innerHTML = startMessage;\n  // const divStartbutton = document.getElementById(\"start-button\")\n  // divStartbutton.innerHTML = ('Click Here To Start');\n\n  // want to do something similar for my music\n  // function toggleMusic(){\n  //     audioButton.onclick = function () {\n  //       audioButton.classList.toggle('active')\n  //       if (audio.paused) {\n  //         document.getElementById(\"play-audio\").src = \"./assets/darkmodeButtons/musicOn.png\"\n  //         audio.play()\n  //       } else {\n  //         document.getElementById(\"play-audio\").src = \"./assets/darkmodeButtons/musicOff.png\"\n  //         audio.pause();\n  //       }\n  //     }\n  // }\n\n  // let game = startGame(level);\n  // while(!lost){\n  //     let result = startGame(++level);\n  //     lost = true;\n  // }\n});\n\n//will create a game, find the winning hand and output the game onto the app\nfunction startGame(level) {\n  game = new _scripts_multiple_choice_game_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  const gameResult = game.bestHand(level); // grabs the best hand depending on level\n  game.printGame.call(game); //debugging purposes, to see the full game info in console\n  const questionH2 = document.querySelector(\"#questionH2\");\n  if (level > 1) {\n    dealerDiv.style.display = 'block';\n    const dealerCardContainer = document.createElement('div');\n    dealerCardContainer.setAttribute('id', 'dealerCardContainer');\n    dealerCardContainer.style.display = \"flex\";\n    const dealerH3 = document.createElement('h3');\n    dealerH3.innerHTML = \"Dealer's hand\";\n    dealerH3.setAttribute('id', 'dealer-title');\n    dealerDiv.append(dealerH3);\n    dealerDiv.append(dealerCardContainer);\n    const dealersHand = game.dealer.hand;\n    for (let i = 0; i < dealersHand.length; i++) {\n      const card = document.createElement('img');\n      const cardIdx = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.suits.indexOf(dealersHand[i].suit);\n      const suitArr = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[cardIdx];\n      const cardHash = suitArr.findIndex(el => el.face === dealersHand[i].value);\n      const cardImg = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[cardIdx][cardHash].img;\n      card.setAttribute('src', cardImg);\n      dealerCardContainer.appendChild(card);\n    }\n  } else {\n    dealerDiv.style.display = 'none';\n  }\n  if ([1, 4, 5].includes(level)) {\n    questionH2.innerHTML = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.questions[0];\n  } else if (level === 2) {\n    questionH2.innerHTML = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.questions[1];\n  } else {\n    questionH2.innerHTML = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.questions[2];\n  }\n  const div = document.getElementById(\"players-hands\");\n  //for-loop for displaying hands of current game\n  for (let i = 0; i < game.players.length; i++) {\n    const innerDiv = document.createElement('div');\n    innerDiv.setAttribute('id', 'player-hand'.concat(String(i + 1)));\n    // innerDiv.setAttribute(\"style\",\"width:200px\");\n    div.append(innerDiv);\n    const h3 = document.createElement('h3');\n    h3.innerHTML = 'hand '.concat(String(i + 1));\n    innerDiv.append(h3);\n    const nestedDiv = document.createElement('div');\n    nestedDiv.setAttribute('id', 'cards-container');\n    innerDiv.appendChild(nestedDiv);\n    const playerHand = game.players[i].hand;\n    const cardOne = document.createElement('img');\n    const cardTwo = document.createElement('img');\n    const firstCardIdx = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.suits.indexOf(playerHand[0].suit);\n    const secondCardIdx = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.suits.indexOf(playerHand[1].suit);\n    let suitArr = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[firstCardIdx];\n    let cardHash = suitArr.findIndex(el => el.face === playerHand[0].value);\n    let cardImg = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[firstCardIdx][cardHash].img;\n    cardOne.setAttribute('src', cardImg);\n    nestedDiv.appendChild(cardOne);\n    suitArr = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[secondCardIdx];\n    cardHash = suitArr.findIndex(el => el.face === playerHand[1].value);\n    cardImg = _scripts_util__WEBPACK_IMPORTED_MODULE_1__.cardImgs[secondCardIdx][cardHash].img;\n    // console.log(cardImg)\n    cardTwo.setAttribute('src', cardImg);\n    nestedDiv.appendChild(cardTwo);\n  }\n  userSelect();\n  return gameResult; // return winning card, later [card, tie, game?, idx?]\n}\n//create a feefback element and add text of feedback\nlet feedback = document.createElement('h1');\nfeedbackContainer.append(feedback);\n\n//checks if the hand the user clicked on is correct, creates new game if correct\nfunction checkAnswer(game, answer) {\n  // console.log(game.players[answer-1].hand)\n\n  if (game.winningHand === game.players[answer - 1].hand) {\n    console.log(answerMessage[0]);\n    feedback.innerHTML = answerMessage[0];\n    // level++;\n    // console.log(level)\n    streak++;\n    score.innerHTML = 'Score: ' + streak.toString();\n    lost = false;\n    setTimeout(() => {\n      let div = document.getElementById(\"players-hands\");\n      div.remove();\n      let body = document.getElementById('body');\n      div = document.createElement('div');\n      div.setAttribute('id', 'players-hands');\n      board.append(div);\n      if (document.getElementById(\"dealerCardContainer\")) {\n        let dealerH3 = document.getElementById('dealer-title');\n        dealerH3.remove();\n        dealerDiv.append(dealerH3);\n        let dealerCardContainer = document.getElementById(\"dealerCardContainer\");\n        dealerCardContainer.remove();\n        dealerCardContainer = document.createElement('div');\n        dealerCardContainer.setAttribute('id', 'dealerCardContainer');\n        dealerCardContainer.style.display = \"flex\";\n        dealerDiv.append(dealerCardContainer);\n      }\n      feedback.remove();\n      feedback = document.createElement('h1');\n      feedbackContainer.append(feedback);\n      startGame(level);\n    }, 500);\n  } else {\n    console.log(answerMessage[1]);\n    feedback.innerHTML = answerMessage[1];\n    streak = 0;\n    score.innerHTML = 'Score: 0';\n    setTimeout(() => {\n      feedback.innerHTML = 'Try Again! Tap the info icon to see hand Ranks';\n    }, 1000);\n    lost = true;\n  }\n}\nfunction userSelect() {\n  document.getElementById('players-hands').addEventListener('click', e => {\n    let answer;\n    if (e.target.id.slice(0, e.target.id.length - 1) === 'player-hand') {\n      answer = e.target.id.slice(e.target.id.length - 1);\n      checkAnswer(game, answer);\n    } else if (e.target.parentNode.id.slice(0, e.target.parentNode.id.length - 1) === 'player-hand') {\n      answer = e.target.parentNode.id.slice(e.target.id.length - 1);\n      checkAnswer(game, answer);\n    } else if (e.target.parentNode.parentNode.id.slice(0, e.target.parentNode.parentNode.id.length - 1) === 'player-hand') {\n      answer = e.target.parentNode.parentNode.id.slice(e.target.id.length - 1);\n      checkAnswer(game, answer);\n    }\n  });\n}\n\n//code that creates and shows the scoring img div\nconst infoClick = document.getElementById(\"info-button\");\ninfoClick.addEventListener('click', e => {\n  if (scoringDiv.style.display === 'flex') {\n    scoringDiv.style.display = 'none';\n    board.style.display = 'block';\n  } else {\n    scoringDiv.style.display = 'flex';\n    board.style.display = 'none';\n  }\n});\n\n// //have a do loop to create new multChoice games/questions, condition: answer must be right//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0E7QUFDQSxNQUFNYSxTQUFTLEdBQUd4RSxRQUFRLENBQUNDLGNBQWMsQ0FBQyxhQUFhLENBQUM7QUFDeER1RSxTQUFTLENBQUNsRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUc2RCxDQUFDLElBQUs7RUFFdkMsSUFBR3BFLFVBQVUsQ0FBQ1EsS0FBSyxDQUFDQyxPQUFPLEtBQUssTUFBTSxFQUFDO0lBQ25DVCxVQUFVLENBQUNRLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07SUFDakNOLEtBQUssQ0FBQ0ssS0FBSyxDQUFDQyxPQUFPLEdBQUcsT0FBTztFQUNqQyxDQUFDLE1BQUk7SUFDRFQsVUFBVSxDQUFDUSxLQUFLLENBQUNDLE9BQU8sR0FBRyxNQUFNO0lBQ2pDTixLQUFLLENBQUNLLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07RUFDaEM7QUFDSixDQUFDLENBQUM7O0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0LXBva2VyLWJsYWNramFjay8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IG11bHRpQ2hvaWNlIGZyb20gXCIuL3NjcmlwdHMvbXVsdGlwbGUtY2hvaWNlLWdhbWUuanNcIjsgXG5pbXBvcnQgKiBhcyBVVElMIGZyb20gXCIuL3NjcmlwdHMvdXRpbFwiIDtcbi8vIGltcG9ydCBHYW1lVmlldyBmcm9tIFwiLi9zY3JpcHRzL2dhbWUtdmlldy5qc1wiO1xuXG5jb25zdCBzdGFydE1lc3NhZ2UgPSAnV2VsY29tZSB0byBQb2tlciBQcm8hIEhlcmUgeW91IGNhbiBsZWFybiBob3cgdG8gcGxheSBwb2tlci4gVGhlcmUgYXJlIHRocmVlIGRpc3RpbmN0IGxldmVscyBidXQgYW4gZW5kbGVzcyBhbW91bnQgb2Ygcm91bmRzIHdpdGhpbiBlYWNoIGxldmVsLiBUaGUgZ29hbCBmb3IgZWFjaCBsZXZlbCBpcyB0byBzZWxlY3QgdGhlIHN0cm9uZ2VzdCBoYW5kIGFtb3VuZyB0aGUgcGxheWVyIGhhbmRzLiBUaGUgZmlyc3QgbGV2ZWwgd2lsbCBjb25zaXN0IG9mIG9ubHkgMyBkaWZmZXJlbnQgcGxheWVyIGhhbmRzLCBoYW5kcyB0aGF0IGhhdmUgb25seSAyIGNhcmRzLiBUaGUgc2Vjb25kIGxldmVsIHdpbGwgaW5jbHVkZSBhIGRlYWxlcnMgaGFuZCwgYSBoYW5kIG9mIDMtNCBjYXJkcywgY2FyZHMgdGhhdCBwbGF5ZXIgaGFuZHMgY2FuIHVzZSB0byBzdHJlbmd0aGVuIHRoZWlyIGhhbmQuIExhc3RseSwgdGhlIGZpbmFsIGxldmVsIHdpbGwgaW5jbHVkZSB0aGUgY29tcGxldGUgaGFuZCBvZiB0aGUgZGVhbGVyLCA1IGNhcmRzLCBjYXJkcyB0aGF0IHBsYXllciBoYW5kcyBjYW4gYWxzbyB1c2UgdG8gc3RyZW5ndGhlbiB0aGVpciBoYW5kLiBBZ2FpbiB0aGUgZ29hbCBpcyBzZWxlY3QgdGhlIFNUUk9OR0VTVCBoYW5kLiBHb29kIEx1Y2shISEgUkVBRFk/ISdcbmxldCBhbnN3ZXJNZXNzYWdlID0gWydDb3JyZWN0IScsICdOb3QgcXVpdGUuJ11cbmxldCBsZXZlbCA9IDE7XG5sZXQgbG9zdCA9IGZhbHNlO1xubGV0IHN0cmVhayA9IDBcbmxldCBnYW1lO1xuY29uc3Qgc2NvcmluZ0RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzY29yaW5nJykgLy9kaXYgaG9sZGluZyBzY29yaW5nIHNoZWV0XG5jb25zdCBib2FyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib2FyZCcpIC8vZGl2IGhvbGRpbmcgZ2FtZSBib2FyZHNcbmNvbnN0IGRlYWxlckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWFsZXItY2FyZHMnKTsgLy9kaXYgdGhhdCBob2xkcyBkZWFsZXJzIGNhcmRzXG5jb25zdCBmZWVkYmFja0NvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmZWVkYmFjay1jb250YWluZXInKVxuY29uc3Qgc2NvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2NvcmUnKTtcblxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG5cbiAgICBzY29yaW5nRGl2LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjsgIC8vYmxvY2tzIGRpdiBmcm9tIGRpc3BsYXlpbmcgY29udGVudHNcbiAgICBzdGFydEdhbWUobGV2ZWwpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3RhcnQtbWVzc2FnZVwiKS5pbm5lckhUTUwgPSBzdGFydE1lc3NhZ2U7XG4gICAgLy8gY29uc3QgZGl2U3RhcnRidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXJ0LWJ1dHRvblwiKVxuICAgIC8vIGRpdlN0YXJ0YnV0dG9uLmlubmVySFRNTCA9ICgnQ2xpY2sgSGVyZSBUbyBTdGFydCcpO1xuICAgIFxuXG4gICAgLy8gd2FudCB0byBkbyBzb21ldGhpbmcgc2ltaWxhciBmb3IgbXkgbXVzaWNcbiAgICAvLyBmdW5jdGlvbiB0b2dnbGVNdXNpYygpe1xuICAgIC8vICAgICBhdWRpb0J1dHRvbi5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIC8vICAgICAgIGF1ZGlvQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpXG4gICAgLy8gICAgICAgaWYgKGF1ZGlvLnBhdXNlZCkge1xuICAgIC8vICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5LWF1ZGlvXCIpLnNyYyA9IFwiLi9hc3NldHMvZGFya21vZGVCdXR0b25zL211c2ljT24ucG5nXCJcbiAgICAvLyAgICAgICAgIGF1ZGlvLnBsYXkoKVxuICAgIC8vICAgICAgIH0gZWxzZSB7XG4gICAgLy8gICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBsYXktYXVkaW9cIikuc3JjID0gXCIuL2Fzc2V0cy9kYXJrbW9kZUJ1dHRvbnMvbXVzaWNPZmYucG5nXCJcbiAgICAvLyAgICAgICAgIGF1ZGlvLnBhdXNlKCk7XG4gICAgLy8gICAgICAgfVxuICAgIC8vICAgICB9XG4gICAgLy8gfVxuXG4gICAgXG4gICAgLy8gbGV0IGdhbWUgPSBzdGFydEdhbWUobGV2ZWwpO1xuICAgIC8vIHdoaWxlKCFsb3N0KXtcbiAgICAvLyAgICAgbGV0IHJlc3VsdCA9IHN0YXJ0R2FtZSgrK2xldmVsKTtcbiAgICAvLyAgICAgbG9zdCA9IHRydWU7XG4gICAgLy8gfVxuXG59KVxuXG5cbi8vd2lsbCBjcmVhdGUgYSBnYW1lLCBmaW5kIHRoZSB3aW5uaW5nIGhhbmQgYW5kIG91dHB1dCB0aGUgZ2FtZSBvbnRvIHRoZSBhcHBcbmZ1bmN0aW9uIHN0YXJ0R2FtZShsZXZlbCl7XG5cbiAgICBnYW1lID0gbmV3IG11bHRpQ2hvaWNlKCk7XG4gICAgY29uc3QgZ2FtZVJlc3VsdCA9IGdhbWUuYmVzdEhhbmQobGV2ZWwpOyAvLyBncmFicyB0aGUgYmVzdCBoYW5kIGRlcGVuZGluZyBvbiBsZXZlbFxuICAgIGdhbWUucHJpbnRHYW1lLmNhbGwoZ2FtZSk7IC8vZGVidWdnaW5nIHB1cnBvc2VzLCB0byBzZWUgdGhlIGZ1bGwgZ2FtZSBpbmZvIGluIGNvbnNvbGVcbiAgICBjb25zdCBxdWVzdGlvbkgyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNxdWVzdGlvbkgyXCIpO1xuICAgIFxuICAgIGlmKGxldmVsID4gMSl7XG4gICAgICAgIGRlYWxlckRpdi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgY29uc3QgZGVhbGVyQ2FyZENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIGRlYWxlckNhcmRDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsJ2RlYWxlckNhcmRDb250YWluZXInKTtcbiAgICAgICAgZGVhbGVyQ2FyZENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgICAgIGNvbnN0IGRlYWxlckgzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKVxuICAgICAgICBkZWFsZXJIMy5pbm5lckhUTUwgPSBcIkRlYWxlcidzIGhhbmRcIlxuICAgICAgICBkZWFsZXJIMy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2RlYWxlci10aXRsZScpXG4gICAgICAgIGRlYWxlckRpdi5hcHBlbmQoZGVhbGVySDMpXG4gICAgICAgIGRlYWxlckRpdi5hcHBlbmQoZGVhbGVyQ2FyZENvbnRhaW5lcik7XG4gICAgICAgIGNvbnN0IGRlYWxlcnNIYW5kID0gZ2FtZS5kZWFsZXIuaGFuZDtcblxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZGVhbGVyc0hhbmQubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgICAgICAgICAgY29uc3QgY2FyZElkeCA9IFVUSUwuc3VpdHMuaW5kZXhPZihkZWFsZXJzSGFuZFtpXS5zdWl0KTtcbiAgICAgICAgICAgIGNvbnN0IHN1aXRBcnIgPSBVVElMLmNhcmRJbWdzW2NhcmRJZHhdO1xuICAgICAgICAgICAgY29uc3QgY2FyZEhhc2ggPSAoc3VpdEFyci5maW5kSW5kZXgoZWwgPT4gZWwuZmFjZSA9PT0gZGVhbGVyc0hhbmRbaV0udmFsdWUpKTtcbiAgICAgICAgICAgIGNvbnN0IGNhcmRJbWcgPSBVVElMLmNhcmRJbWdzW2NhcmRJZHhdW2NhcmRIYXNoXS5pbWc7XG4gICAgICAgICAgICBjYXJkLnNldEF0dHJpYnV0ZSgnc3JjJywgY2FyZEltZyk7XG4gICAgICAgICAgICBkZWFsZXJDYXJkQ29udGFpbmVyLmFwcGVuZENoaWxkKGNhcmQpO1xuICAgICAgICB9XG4gICAgfWVsc2V7XG4gICAgICAgIGRlYWxlckRpdi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgfVxuXG4gICAgaWYoWzEsNCw1XS5pbmNsdWRlcyhsZXZlbCkpe1xuICAgICAgICBxdWVzdGlvbkgyLmlubmVySFRNTCA9IFVUSUwucXVlc3Rpb25zWzBdO1xuICAgIH1lbHNlIGlmKGxldmVsID09PSAyKXtcbiAgICAgICAgcXVlc3Rpb25IMi5pbm5lckhUTUwgPSBVVElMLnF1ZXN0aW9uc1sxXTtcbiAgICB9ZWxzZXtcbiAgICAgICAgcXVlc3Rpb25IMi5pbm5lckhUTUwgPSBVVElMLnF1ZXN0aW9uc1syXTtcbiAgICB9XG5cbiAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBsYXllcnMtaGFuZHNcIik7XG4gICAgLy9mb3ItbG9vcCBmb3IgZGlzcGxheWluZyBoYW5kcyBvZiBjdXJyZW50IGdhbWVcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgZ2FtZS5wbGF5ZXJzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgY29uc3QgaW5uZXJEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICBpbm5lckRpdi5zZXRBdHRyaWJ1dGUoJ2lkJywgKCdwbGF5ZXItaGFuZCcpLmNvbmNhdChTdHJpbmcoaSsxKSkpO1xuICAgICAgICAvLyBpbm5lckRpdi5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLFwid2lkdGg6MjAwcHhcIik7XG4gICAgICAgIGRpdi5hcHBlbmQoaW5uZXJEaXYpO1xuICAgICAgICBjb25zdCBoMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJylcbiAgICAgICAgaDMuaW5uZXJIVE1MID0gKCdoYW5kICcpLmNvbmNhdChTdHJpbmcoaSsxKSlcbiAgICAgICAgaW5uZXJEaXYuYXBwZW5kKGgzKVxuICAgICAgICBjb25zdCBuZXN0ZWREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgbmVzdGVkRGl2LnNldEF0dHJpYnV0ZSgnaWQnLCAnY2FyZHMtY29udGFpbmVyJylcbiAgICAgICAgaW5uZXJEaXYuYXBwZW5kQ2hpbGQobmVzdGVkRGl2KTtcblxuICAgICAgICBjb25zdCBwbGF5ZXJIYW5kID0gZ2FtZS5wbGF5ZXJzW2ldLmhhbmQ7XG4gICAgICAgIGNvbnN0IGNhcmRPbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICAgICAgY29uc3QgY2FyZFR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgICAgICBjb25zdCBmaXJzdENhcmRJZHggPSBVVElMLnN1aXRzLmluZGV4T2YocGxheWVySGFuZFswXS5zdWl0KTtcbiAgICAgICAgY29uc3Qgc2Vjb25kQ2FyZElkeCA9IFVUSUwuc3VpdHMuaW5kZXhPZihwbGF5ZXJIYW5kWzFdLnN1aXQpXG4gICAgICAgIGxldCBzdWl0QXJyID0gVVRJTC5jYXJkSW1nc1tmaXJzdENhcmRJZHhdO1xuICAgICAgICBsZXQgY2FyZEhhc2ggPSAoc3VpdEFyci5maW5kSW5kZXgoZWwgPT4gZWwuZmFjZSA9PT0gcGxheWVySGFuZFswXS52YWx1ZSkpO1xuICAgICAgICBsZXQgY2FyZEltZyA9IFVUSUwuY2FyZEltZ3NbZmlyc3RDYXJkSWR4XVtjYXJkSGFzaF0uaW1nO1xuICAgICAgICBjYXJkT25lLnNldEF0dHJpYnV0ZSgnc3JjJywgY2FyZEltZyk7XG4gICAgICAgIG5lc3RlZERpdi5hcHBlbmRDaGlsZChjYXJkT25lKTtcbiAgICAgICAgc3VpdEFyciA9IFVUSUwuY2FyZEltZ3Nbc2Vjb25kQ2FyZElkeF07XG4gICAgICAgIGNhcmRIYXNoID0gKHN1aXRBcnIuZmluZEluZGV4KGVsID0+IGVsLmZhY2UgPT09IHBsYXllckhhbmRbMV0udmFsdWUpKTtcbiAgICAgICAgY2FyZEltZyA9IFVUSUwuY2FyZEltZ3Nbc2Vjb25kQ2FyZElkeF1bY2FyZEhhc2hdLmltZztcbiAgICAgICAgLy8gY29uc29sZS5sb2coY2FyZEltZylcbiAgICAgICAgY2FyZFR3by5zZXRBdHRyaWJ1dGUoJ3NyYycsIGNhcmRJbWcpO1xuICAgICAgICBuZXN0ZWREaXYuYXBwZW5kQ2hpbGQoY2FyZFR3byk7XG5cbiAgICB9XG4gICAgdXNlclNlbGVjdCgpO1xuXG4gICAgcmV0dXJuIGdhbWVSZXN1bHQgLy8gcmV0dXJuIHdpbm5pbmcgY2FyZCwgbGF0ZXIgW2NhcmQsIHRpZSwgZ2FtZT8sIGlkeD9dXG5cbn1cbi8vY3JlYXRlIGEgZmVlZmJhY2sgZWxlbWVudCBhbmQgYWRkIHRleHQgb2YgZmVlZGJhY2tcbmxldCBmZWVkYmFjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJylcbmZlZWRiYWNrQ29udGFpbmVyLmFwcGVuZChmZWVkYmFjaylcblxuLy9jaGVja3MgaWYgdGhlIGhhbmQgdGhlIHVzZXIgY2xpY2tlZCBvbiBpcyBjb3JyZWN0LCBjcmVhdGVzIG5ldyBnYW1lIGlmIGNvcnJlY3RcbmZ1bmN0aW9uIGNoZWNrQW5zd2VyKGdhbWUsIGFuc3dlcil7XG4gICAgLy8gY29uc29sZS5sb2coZ2FtZS5wbGF5ZXJzW2Fuc3dlci0xXS5oYW5kKVxuXG4gICAgaWYoZ2FtZS53aW5uaW5nSGFuZCA9PT0gZ2FtZS5wbGF5ZXJzW2Fuc3dlci0xXS5oYW5kKXtcblxuICAgICAgICBjb25zb2xlLmxvZyhhbnN3ZXJNZXNzYWdlWzBdKTtcbiAgICAgICAgZmVlZGJhY2suaW5uZXJIVE1MID0gYW5zd2VyTWVzc2FnZVswXVxuICAgICAgICAvLyBsZXZlbCsrO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhsZXZlbClcbiAgICAgICAgc3RyZWFrKys7XG4gICAgICAgIHNjb3JlLmlubmVySFRNTCA9ICdTY29yZTogJysgc3RyZWFrLnRvU3RyaW5nKClcbiAgICAgICAgbG9zdCA9IGZhbHNlO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGxldCBkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBsYXllcnMtaGFuZHNcIik7XG4gICAgICAgICAgICBkaXYucmVtb3ZlKCk7XG4gICAgICAgICAgICBsZXQgYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib2R5JylcbiAgICAgICAgICAgIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgICAgICBkaXYuc2V0QXR0cmlidXRlKCdpZCcsICdwbGF5ZXJzLWhhbmRzJylcbiAgICAgICAgICAgIGJvYXJkLmFwcGVuZChkaXYpXG4gICAgXG4gICAgICAgICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlYWxlckNhcmRDb250YWluZXJcIikpe1xuICAgIFxuICAgICAgICAgICAgICAgIGxldCBkZWFsZXJIMyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWFsZXItdGl0bGUnKVxuICAgICAgICAgICAgICAgIGRlYWxlckgzLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIGRlYWxlckRpdi5hcHBlbmQoZGVhbGVySDMpXG4gICAgICAgICAgICAgICAgbGV0IGRlYWxlckNhcmRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlYWxlckNhcmRDb250YWluZXJcIilcbiAgICAgICAgICAgICAgICBkZWFsZXJDYXJkQ29udGFpbmVyLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIGRlYWxlckNhcmRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICAgICAgICAgIGRlYWxlckNhcmRDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdkZWFsZXJDYXJkQ29udGFpbmVyJylcbiAgICAgICAgICAgICAgICBkZWFsZXJDYXJkQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICAgICAgICAgICAgICBkZWFsZXJEaXYuYXBwZW5kKGRlYWxlckNhcmRDb250YWluZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmVlZGJhY2sucmVtb3ZlKCk7XG4gICAgICAgICAgICBmZWVkYmFjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJylcbiAgICAgICAgICAgIGZlZWRiYWNrQ29udGFpbmVyLmFwcGVuZChmZWVkYmFjaylcblxuICAgICAgICAgICAgc3RhcnRHYW1lKGxldmVsKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICB9ZWxzZXtcbiAgICAgICAgY29uc29sZS5sb2coYW5zd2VyTWVzc2FnZVsxXSk7XG4gICAgICAgIGZlZWRiYWNrLmlubmVySFRNTCA9IGFuc3dlck1lc3NhZ2VbMV07XG4gICAgICAgIHN0cmVhayA9IDA7XG4gICAgICAgIHNjb3JlLmlubmVySFRNTCA9ICdTY29yZTogMCdcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBmZWVkYmFjay5pbm5lckhUTUwgPSAnVHJ5IEFnYWluISBUYXAgdGhlIGluZm8gaWNvbiB0byBzZWUgaGFuZCBSYW5rcydcbiAgICAgICAgfSwgMTAwMClcbiAgICAgICAgbG9zdCA9IHRydWU7XG4gICAgfVxuXG5cblxuICAgIFxufVxuXG5mdW5jdGlvbiB1c2VyU2VsZWN0KCl7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BsYXllcnMtaGFuZHMnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgICAgICBsZXQgYW5zd2VyO1xuICAgIFxuICAgICAgICBpZihlLnRhcmdldC5pZC5zbGljZSgwLGUudGFyZ2V0LmlkLmxlbmd0aC0xKSA9PT0gJ3BsYXllci1oYW5kJyl7XG4gICAgICAgICAgICBhbnN3ZXIgPSBlLnRhcmdldC5pZC5zbGljZShlLnRhcmdldC5pZC5sZW5ndGgtMSk7XG4gICAgICAgICAgICBjaGVja0Fuc3dlcihnYW1lLCBhbnN3ZXIpXG4gICAgICAgICAgICBcbiAgICAgICAgfWVsc2UgaWYoZS50YXJnZXQucGFyZW50Tm9kZS5pZC5zbGljZSgwLGUudGFyZ2V0LnBhcmVudE5vZGUuaWQubGVuZ3RoLTEpID09PSAncGxheWVyLWhhbmQnKXtcbiAgICAgICAgICAgIGFuc3dlciA9IGUudGFyZ2V0LnBhcmVudE5vZGUuaWQuc2xpY2UoZS50YXJnZXQuaWQubGVuZ3RoLTEpO1xuICAgICAgICAgICAgY2hlY2tBbnN3ZXIoZ2FtZSwgYW5zd2VyKVxuICAgICAgICAgICAgXG4gICAgICAgIH1lbHNlIGlmKGUudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZS5pZC5zbGljZSgwLGUudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZS5pZC5sZW5ndGgtMSkgPT09ICdwbGF5ZXItaGFuZCcpe1xuICAgICAgICAgICAgYW5zd2VyID0gZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlLmlkLnNsaWNlKGUudGFyZ2V0LmlkLmxlbmd0aC0xKTtcbiAgICAgICAgICAgIGNoZWNrQW5zd2VyKGdhbWUsIGFuc3dlcilcbiAgICAgICAgfVxuICAgIH0pXG59XG5cblxuLy9jb2RlIHRoYXQgY3JlYXRlcyBhbmQgc2hvd3MgdGhlIHNjb3JpbmcgaW1nIGRpdlxuY29uc3QgaW5mb0NsaWNrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbmZvLWJ1dHRvblwiKVxuaW5mb0NsaWNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICBcbiAgICBpZihzY29yaW5nRGl2LnN0eWxlLmRpc3BsYXkgPT09ICdmbGV4Jyl7XG4gICAgICAgIHNjb3JpbmdEaXYuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICBib2FyZC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJ1xuICAgIH1lbHNle1xuICAgICAgICBzY29yaW5nRGl2LnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XG4gICAgICAgIGJvYXJkLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICB9XG59KVxuXG5cbi8vIC8vaGF2ZSBhIGRvIGxvb3AgdG8gY3JlYXRlIG5ldyBtdWx0Q2hvaWNlIGdhbWVzL3F1ZXN0aW9ucywgY29uZGl0aW9uOiBhbnN3ZXIgbXVzdCBiZSByaWdodFxuIl0sIm5hbWVzIjpbIm11bHRpQ2hvaWNlIiwiVVRJTCIsInN0YXJ0TWVzc2FnZSIsImFuc3dlck1lc3NhZ2UiLCJsZXZlbCIsImxvc3QiLCJzdHJlYWsiLCJnYW1lIiwic2NvcmluZ0RpdiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJib2FyZCIsImRlYWxlckRpdiIsImZlZWRiYWNrQ29udGFpbmVyIiwic2NvcmUiLCJhZGRFdmVudExpc3RlbmVyIiwic3R5bGUiLCJkaXNwbGF5Iiwic3RhcnRHYW1lIiwiaW5uZXJIVE1MIiwiZ2FtZVJlc3VsdCIsImJlc3RIYW5kIiwicHJpbnRHYW1lIiwiY2FsbCIsInF1ZXN0aW9uSDIiLCJxdWVyeVNlbGVjdG9yIiwiZGVhbGVyQ2FyZENvbnRhaW5lciIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJkZWFsZXJIMyIsImFwcGVuZCIsImRlYWxlcnNIYW5kIiwiZGVhbGVyIiwiaGFuZCIsImkiLCJsZW5ndGgiLCJjYXJkIiwiY2FyZElkeCIsInN1aXRzIiwiaW5kZXhPZiIsInN1aXQiLCJzdWl0QXJyIiwiY2FyZEltZ3MiLCJjYXJkSGFzaCIsImZpbmRJbmRleCIsImVsIiwiZmFjZSIsInZhbHVlIiwiY2FyZEltZyIsImltZyIsImFwcGVuZENoaWxkIiwiaW5jbHVkZXMiLCJxdWVzdGlvbnMiLCJkaXYiLCJwbGF5ZXJzIiwiaW5uZXJEaXYiLCJjb25jYXQiLCJTdHJpbmciLCJoMyIsIm5lc3RlZERpdiIsInBsYXllckhhbmQiLCJjYXJkT25lIiwiY2FyZFR3byIsImZpcnN0Q2FyZElkeCIsInNlY29uZENhcmRJZHgiLCJ1c2VyU2VsZWN0IiwiZmVlZGJhY2siLCJjaGVja0Fuc3dlciIsImFuc3dlciIsIndpbm5pbmdIYW5kIiwiY29uc29sZSIsImxvZyIsInRvU3RyaW5nIiwic2V0VGltZW91dCIsInJlbW92ZSIsImJvZHkiLCJlIiwidGFyZ2V0IiwiaWQiLCJzbGljZSIsInBhcmVudE5vZGUiLCJpbmZvQ2xpY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/cards.js":
/*!******************************!*\
  !*** ./src/scripts/cards.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deckCreation: function() { return /* binding */ deckCreation; }\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\n\n//I think im done with this portion, cards have two attributes their suit and number/value\n//I dont think I need any methods for the card class\nclass Card {\n  constructor(suit, value) {\n    this.suit = suit;\n    this.value = value;\n  }\n}\n\n// returning a generated deck of cards\nfunction deckCreation() {\n  //flatten method with map\n  let deck = _util__WEBPACK_IMPORTED_MODULE_0__.suits.flatMap(suit => {\n    return _util__WEBPACK_IMPORTED_MODULE_0__.values.map(value => {\n      // returns an array of cards of a suit paried with each value in values array\n      return new Card(suit, value);\n    });\n  });\n  return deck.sort(() => 0.5 - Math.random()); // shuffling deck array randomly \n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jYXJkcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QjtBQUM5QjtBQUNBO0FBQ0EsTUFBTUMsSUFBSSxDQUFDO0VBQ1BDLFdBQVdBLENBQUNDLElBQUksRUFBRUMsS0FBSyxFQUFDO0lBQ3BCLElBQUksQ0FBQ0QsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHQSxLQUFLO0VBQ3RCO0FBQ0o7O0FBRUE7QUFDTyxTQUFTQyxZQUFZQSxDQUFBLEVBQUU7RUFDMUI7RUFDQSxJQUFJQyxJQUFJLEdBQUdOLHdDQUFVLENBQUNRLE9BQU8sQ0FBQ0wsSUFBSSxJQUFJO0lBQ2xDLE9BQU9ILHlDQUFXLENBQUNVLEdBQUcsQ0FBQ04sS0FBSyxJQUFJO01BQUU7TUFDOUIsT0FBTyxJQUFJSCxJQUFJLENBQUNFLElBQUksRUFBQ0MsS0FBSyxDQUFDO0lBQy9CLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUVGLE9BQU9FLElBQUksQ0FBQ0ssSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHQyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLXByb2plY3QtcG9rZXItYmxhY2tqYWNrLy4vc3JjL3NjcmlwdHMvY2FyZHMuanM/NDUyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVVElMIGZyb20gXCIuL3V0aWxcIlxuLy9JIHRoaW5rIGltIGRvbmUgd2l0aCB0aGlzIHBvcnRpb24sIGNhcmRzIGhhdmUgdHdvIGF0dHJpYnV0ZXMgdGhlaXIgc3VpdCBhbmQgbnVtYmVyL3ZhbHVlXG4vL0kgZG9udCB0aGluayBJIG5lZWQgYW55IG1ldGhvZHMgZm9yIHRoZSBjYXJkIGNsYXNzXG5jbGFzcyBDYXJkIHtcbiAgICBjb25zdHJ1Y3RvcihzdWl0LCB2YWx1ZSl7XG4gICAgICAgIHRoaXMuc3VpdCA9IHN1aXQ7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG59XG5cbi8vIHJldHVybmluZyBhIGdlbmVyYXRlZCBkZWNrIG9mIGNhcmRzXG5leHBvcnQgZnVuY3Rpb24gZGVja0NyZWF0aW9uKCl7XG4gICAgLy9mbGF0dGVuIG1ldGhvZCB3aXRoIG1hcFxuICAgIGxldCBkZWNrID0gVVRJTC5zdWl0cy5mbGF0TWFwKHN1aXQgPT4ge1xuICAgICAgICByZXR1cm4gVVRJTC52YWx1ZXMubWFwKHZhbHVlID0+IHsgLy8gcmV0dXJucyBhbiBhcnJheSBvZiBjYXJkcyBvZiBhIHN1aXQgcGFyaWVkIHdpdGggZWFjaCB2YWx1ZSBpbiB2YWx1ZXMgYXJyYXlcbiAgICAgICAgICAgIHJldHVybiBuZXcgQ2FyZChzdWl0LHZhbHVlKVxuICAgICAgICB9KVxuICAgIH0pIFxuXG4gICAgcmV0dXJuIGRlY2suc29ydCgoKSA9PiAwLjUgLSBNYXRoLnJhbmRvbSgpKSAvLyBzaHVmZmxpbmcgZGVjayBhcnJheSByYW5kb21seSBcbn0iXSwibmFtZXMiOlsiVVRJTCIsIkNhcmQiLCJjb25zdHJ1Y3RvciIsInN1aXQiLCJ2YWx1ZSIsImRlY2tDcmVhdGlvbiIsImRlY2siLCJzdWl0cyIsImZsYXRNYXAiLCJ2YWx1ZXMiLCJtYXAiLCJzb3J0IiwiTWF0aCIsInJhbmRvbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/cards.js\n");

/***/ }),

/***/ "./src/scripts/multiple-choice-game.js":
/*!*********************************************!*\
  !*** ./src/scripts/multiple-choice-game.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ multiChoice; }\n/* harmony export */ });\n/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cards */ \"./src/scripts/cards.js\");\n/* harmony import */ var _player_hand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player-hand */ \"./src/scripts/player-hand.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\n\n\n\nclass multiChoice {\n  constructor() {\n    // this.ctx = canvas.getContext('2d');\n\n    this.deck = (0,_cards__WEBPACK_IMPORTED_MODULE_0__.deckCreation)(); // deck used for multi-choice game\n    this.players = []; //array that will hold all hands of the current game\n    this.hands(3); // adds 3 or 5 players to the game, players array, depending on input\n    this.dealer = new _player_hand__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.deck); // creating dealer hand\n    this.dealer.addToHand.call(this.dealer, 3); // dealer always starts off with 3 cards\n    this.winningHand; // will hold winning hand\n    this.outcome; // will hold a str of desc of winning hand\n  }\n\n  hands(num) {\n    // function for generating the num of players/hands wanted per game\n    for (let i = 0; i < num; i++) {\n      let player = new _player_hand__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.deck); // creating a hand that also has a reference to the game's deck\n      player.addToHand.call(player, 2); //players/hands will only ever have two cards\n      this.players.push(player); //adding each hand to game's players array\n    }\n  }\n\n  printGame() {\n    // prints all cards in the game(dealer + players)\n    console.log(this);\n    console.log('Game Results', this.winningHand);\n    // console.log(this.dealer.hand)\n    // for(let i = 0; i < this.players.length; i++){\n    //     console.log(this.players[i].hand);\n    // }\n  }\n\n  // need to work on 4-of-kind occurance\n  bestHand(round) {\n    let tie = false;\n    let hand;\n    let currentHand;\n    if (round < 3) {\n      //working!!!\n\n      return this.roundOneToTwo.call(this);\n    } else if (this.dealer.hand.length < 5) {\n      //look for high card, pair, two pair, 3-of-a-kind, 4-of-a-kind\n\n      // console.log('IN ROUNDS 3-4')\n      let handIdx = [0];\n      hand = this.players[0].hand.concat(this.dealer.hand);\n      // console.log('hand');\n      // console.log(hand)\n\n      for (let i = 1; i < this.players.length; i++) {\n        // for(let i = 1; i < 2; i++){ //debugging purposes\n        currentHand = this.players[i].hand.concat(this.dealer.hand);\n        // console.log('current hand')\n        // console.log(currentHand);\n\n        //hashes to count pairs*\n        let handCount = {};\n        let currHandCount = {};\n        for (let i = 0; i < hand.length; i++) {\n          handCount[hand[i].value] ? handCount[hand[i].value].push(hand[i].value) : handCount[hand[i].value] = [hand[i].value];\n          currHandCount[currentHand[i].value] ? currHandCount[currentHand[i].value].push(currentHand[i].value) : currHandCount[currentHand[i].value] = [currentHand[i].value];\n        }\n        // console.log('hashes');\n        // console.log(handCount);\n        // console.log(currHandCount);\n\n        //^^ WORKING\n\n        if (Object.values(handCount).find(ele => ele.length === 4) || Object.values(currHandCount).find(ele => ele.length === 4)) {\n          // at least one player has four of a kind\n\n          let result = this.compareFourOfKind.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else if (Object.values(handCount).find(ele => ele.length === 3) || Object.values(currHandCount).find(ele => ele.length === 3)) {\n          // at least one player has 3 of a kind\n\n          let result = this.compareThreeOfKind.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else if (Object.values(handCount).find(arr => arr.length === 2) || Object.values(currHandCount).find(arr => arr.length === 2)) {\n          let result = this.comparePairs.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else {\n          // last look for highest card, of their 2 cards, WORKING!!!\n          let result = this.compareHandValues(hand, currentHand);\n          if (result == 'tie') {\n            tie = true;\n            handIdx.push(i);\n          } else if (result === currentHand) {\n            tie = false;\n            hand = currentHand;\n            handIdx = [i];\n          }\n        }\n      }\n      return hand.slice(0, 2);\n    } else {\n      //NEED TO WOKR ON THIS!! case: dealer has all 5 cards, now check for flush, straight, etc.\n\n      let result = this.lastRounds.call(this);\n      return result[0];\n    }\n  } //END OF BESTHAND FUNCTION\n\n  //done and working!!\n  roundOneToTwo() {\n    //WORKING!!\n    let tie = false;\n    let hand;\n    let currentHand;\n    hand = this.players[0].hand;\n    for (let i = 1; i < this.players.length; i++) {\n      // for(let i = 1; i < 2; i++){ //debugging purpose \n      currentHand = this.players[i].hand;\n      //booleans checking if any of the two have a pair\n      let handPair = hand[0].value === hand[1].value;\n      let currentHandPair = currentHand[0].value === currentHand[1].value;\n      if (handPair || currentHandPair) {\n        // at least one has a pair\n        if (handPair && currentHandPair) {\n          // if both, checking for highest card\n          if (hand[0].value === currentHand[0].value) {\n            tie = true;\n          } else {\n            hand = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand[0].value) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currentHand[0].value) ? hand : currentHand;\n          }\n        } else {\n          hand = handPair ? hand : currentHand;\n        }\n      } else {\n        // no pair, just checking for highest card\n        let result = this.compareHandValues(hand, currentHand);\n        if (result === 'tie') {\n          tie = true;\n        } else if (result === currentHand) {\n          hand = result;\n        }\n      }\n    }\n    // if(tie) console.log(\"tie\")\n    // console.log('in roundOneToTwo')\n    // console.log(hand)\n    this.winningHand = hand;\n    return this;\n    // end of game logic for round 1-2\n  }\n\n  //need to work on this\n  lastRounds() {\n    // check for all possible hands then best, NEED TO WORK ON THIS!\n    let dealerHand = this.dealer.hand;\n    // console.log(dealerHand)\n    let hand = this.players[0].hand.concat(dealerHand);\n    // console.log(this.players[0].hand);\n\n    for (let i = 1; i < this.players.length; i++) {\n      let currentHand = this.players[i].hand.concat(dealerHand);\n      // need logic to check what kind of hand they have;\n    }\n\n    // if(tie) console.log(tie)\n    return hand;\n  }\n\n  //done and working!!\n  compareHandValues(hand1, hand2) {\n    // WORKING!!\n    let hand1Max = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[0].value) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[1].value) ? _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[0].value) : _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[1].value);\n    let hand2Max = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[0].value) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[1].value) ? _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[0].value) : _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[1].value);\n    let result;\n    if (hand1Max === hand2Max) {\n      if (hand1[0].value === hand2[0].value) {\n        if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[1].value) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[1].value)) result = hand2;\n      } else if (hand1[0].value === hand2[1].value) {\n        if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[1].value) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[0].value)) result = hand2;\n      } else if (hand1[1].value === hand2[0].value) {\n        if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[0].value) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[1].value)) result = hand2;\n      } else if (hand1[1].value === hand2[1].value) {\n        if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand1[0].value) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(hand2[0].value)) result = hand2;\n      } else {\n        result = 'tie';\n      }\n    } else if (hand1Max < hand2Max) {\n      result = hand2;\n    }\n    return result;\n  }\n\n  //done, working!!\n  compareThreeOfKind(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    //done, working?\n    // console.log('in compareThreeOfKind');\n\n    let handThreeOfKind = Object.values(handCount).find(arr => arr.length === 3);\n    let currHandThreeOfKind = Object.values(currHandCount).find(arr => arr.length === 3);\n    if (handThreeOfKind && currHandThreeOfKind) {\n      //check if anyone has another 3-of-kind\n      if (Object.values(handCount).find(ele => ele.length === 3) || Object.values(currHandCount).find(ele => ele.length === 3)) {\n        let handThreeOfKindSecond = Object.values(handCount).find(arr => arr.length === 3 && arr[0] !== handThreeOfKind[0]);\n        let currHandThreeOfKindSecond = Object.values(currHandCount).find(arr => arr.length === 3 && arr[0] !== currHandThreeOfKind[0]);\n        if (handThreeOfKindSecond && currHandThreeOfKindSecond) {\n          let handBestThreeOfKind = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKindSecond[0]) ? handThreeOfKind : handThreeOfKindSecond;\n          let currHandBestThreeOfKind = _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0]) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKindSecond[0]) ? currHandThreeOfKind : currHandThreeOfKindSecond;\n          if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handBestThreeOfKind[0]) === TIL.values.indexOf(currHandBestThreeOfKind[0])) {\n            tie = true;\n          } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handBestThreeOfKind[0]) < TIL.values.indexOf(currHandBestThreeOfKind[0])) {\n            hand = currentHand;\n            tie = false;\n          }\n        } else {\n          if (currHandCount) {\n            hand = currentHand;\n            tie = false;\n          }\n        }\n      } else if\n        //check if anyone has a pair as well\n      (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0])) {\n        let handPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]);\n        let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0]);\n        if (handPair && currHandPair) {\n          //what if a hand has two pairs\n          //both have 3-of-kind & pair, check if for greatest 3-of-kind\n          if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) === _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0])) {\n            //save 3-of-kind cards, then check for greatest pair\n            if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handPair[0]) === _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandPair[0])) {\n              tie = true;\n            } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handPair[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandPair[0])) {\n              hand = currentHand;\n              tie = false;\n            }\n          } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0])) {\n            hand = currentHand;\n            tie = false;\n          }\n        } else {\n          //done\n          if (currHandPair) {\n            hand = currHandCount;\n            tie = false;\n          }\n        }\n      } else if (handThreeOfKind[0] === currHandThreeOfKind[0]) {\n        tie = true;\n      } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0])) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    } else {\n      //done\n      if (currHandThreeOfKind) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    }\n\n    return [hand, handIdx, tie];\n  }\n\n  //still need to work on this\n  compareFourOfKind(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    // console.log('in compareFourOfKind')\n    let handFourOfKind = Object.values(handCount).find(arr => arr.length === 4);\n    let currHandFourOfKind = Object.values(currHandCount).find(arr => arr.length === 4);\n    if (handFourOfKind && currHandFourOfKind) {\n      if (handFourOfKind[0] === currHandFourOfKind[0]) {\n        //check if anyone has a pair as well\n        if (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handFourOfKind[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandFourOfKind[0])) {\n          let handPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]);\n          let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0]);\n          if (handPair && currHandPair) {\n            if (handPair[0] === currHandPair[0]) {\n              tie = true;\n            } else {\n              if (currHandPair) {\n                hand = currentHand;\n                tie = false;\n              }\n            }\n          } else {\n            if (currHandPair) {\n              hand = currHandCount;\n              tie = false;\n            }\n          }\n        } else {\n          tie = true;\n          // handIdx.push(i);\n        }\n      } else if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handThreeOfKind[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandThreeOfKind[0])) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    } else {\n      if (currHandThreeOfKind) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    }\n\n    return [hand, handIdx, tie];\n  }\n\n  //done and working!!!\n  comparePairs(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    // working!!\n    let handPair = Object.values(handCount).find(arr => arr.length === 2);\n    let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2);\n    // console.log(handPair)\n    // console.log(currHandPair)\n\n    //check if pair is amoung only dealer's hand, still need to work on this\n    if (handPair && currHandPair) {\n      // both have a pair\n      // console.log('hi')\n\n      if (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handPair[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandPair[0])) {\n        //atleast one has two pairs, WOKRING!!!\n        //check who has the second pair if not both\n        let secondHandPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handPair[0]);\n        let secondCurrHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandPair[0]);\n        // console.log(secondHandPair);\n        // console.log(secondCurrHandPair);\n\n        if (secondHandPair && secondCurrHandPair) {\n          if (secondHandPair[0] === secondCurrHandPair[0]) {\n            tie = true;\n            // handIdx.push(i);\n          } else {\n            if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(secondHandPair[0]) < _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(secondCurrHandPair[0])) {\n              hand = currentHand;\n              tie = false;\n              // handCount = [i];\n            }\n          }\n        } else {\n          // WORKING!!\n          if (secondCurrHandPair) {\n            hand = currentHand;\n            tie = false;\n            // handIdx = [i];\n          }\n        }\n      } else {\n        // look for the pair with the highest value, WOKRING!!!\n        if (handPair[0] === currHandPair[0]) {\n          tie = true;\n          // handIdx.push(i);\n          // console.log(tie);\n        } else {\n          if (_util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(currHandPair[0]) > _util__WEBPACK_IMPORTED_MODULE_2__.values.indexOf(handPair[0])) {\n            tie = false;\n            hand = currentHand;\n            // handIdx = [i];\n          }\n        }\n      }\n    } else {\n      // check if currHand is the one with the pair, WORKING!!!!\n      // console.log('one pair')\n      if (currHandPair) {\n        tie = false;\n        hand = currentHand;\n        // handIdx = [i];\n      }\n    }\n\n    // console.log('in ComparePairs')\n    // console.log(hand);\n    return [hand, handIdx, tie];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/multiple-choice-game.js\n");

/***/ }),

/***/ "./src/scripts/player-hand.js":
/*!************************************!*\
  !*** ./src/scripts/player-hand.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PlayerHand; }\n/* harmony export */ });\nclass PlayerHand {\n  // fine, dont touch\n  constructor(deck) {\n    this.deck = deck; // reference to the game's card deck\n    this.hand = []; // array that will hold this player's cards\n  }\n\n  addToHand(num) {\n    // maybe add a random way either pop/shift\n    //take a card from deck and add to hand, remove card from deck\n    while (num > 0) {\n      this.hand.push(this.deck.shift());\n      num--;\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXItaGFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQ2UsTUFBTUEsVUFBVTtFQUFFO0VBQzdCQyxXQUFXQSxDQUFDQyxJQUFJLEVBQUM7SUFDYixJQUFJLENBQUNBLElBQUksR0FBR0EsSUFBSSxDQUFDLENBQUM7SUFDbEIsSUFBSSxDQUFDQyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7RUFDcEI7O0VBR0FDLFNBQVNBLENBQUNDLEdBQUcsRUFBQztJQUFFO0lBQ1o7SUFDQSxPQUFNQSxHQUFHLEdBQUcsQ0FBQyxFQUFDO01BQ1YsSUFBSSxDQUFDRixJQUFJLENBQUNHLElBQUksQ0FBQyxJQUFJLENBQUNKLElBQUksQ0FBQ0ssS0FBSyxDQUFDLENBQUMsQ0FBQztNQUNqQ0YsR0FBRyxFQUFFO0lBQ1Q7RUFDSjtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMtcHJvamVjdC1wb2tlci1ibGFja2phY2svLi9zcmMvc2NyaXB0cy9wbGF5ZXItaGFuZC5qcz9hYjllIl0sInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVySGFuZHsgLy8gZmluZSwgZG9udCB0b3VjaFxuICAgIGNvbnN0cnVjdG9yKGRlY2spe1xuICAgICAgICB0aGlzLmRlY2sgPSBkZWNrOyAvLyByZWZlcmVuY2UgdG8gdGhlIGdhbWUncyBjYXJkIGRlY2tcbiAgICAgICAgdGhpcy5oYW5kID0gW107IC8vIGFycmF5IHRoYXQgd2lsbCBob2xkIHRoaXMgcGxheWVyJ3MgY2FyZHNcbiAgICB9XG5cblxuICAgIGFkZFRvSGFuZChudW0peyAvLyBtYXliZSBhZGQgYSByYW5kb20gd2F5IGVpdGhlciBwb3Avc2hpZnRcbiAgICAgICAgLy90YWtlIGEgY2FyZCBmcm9tIGRlY2sgYW5kIGFkZCB0byBoYW5kLCByZW1vdmUgY2FyZCBmcm9tIGRlY2tcbiAgICAgICAgd2hpbGUobnVtID4gMCl7XG4gICAgICAgICAgICB0aGlzLmhhbmQucHVzaCh0aGlzLmRlY2suc2hpZnQoKSk7XG4gICAgICAgICAgICBudW0tLTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuIl0sIm5hbWVzIjpbIlBsYXllckhhbmQiLCJjb25zdHJ1Y3RvciIsImRlY2siLCJoYW5kIiwiYWRkVG9IYW5kIiwibnVtIiwicHVzaCIsInNoaWZ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/player-hand.js\n");

/***/ }),

/***/ "./src/scripts/util.js":
/*!*****************************!*\
  !*** ./src/scripts/util.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cardImgs: function() { return /* binding */ cardImgs; },\n/* harmony export */   questions: function() { return /* binding */ questions; },\n/* harmony export */   rankingHands: function() { return /* binding */ rankingHands; },\n/* harmony export */   suits: function() { return /* binding */ suits; },\n/* harmony export */   values: function() { return /* binding */ values; }\n/* harmony export */ });\n//variables for creation of cards/deck and scoring purposes\nconst suits = ['♣', '♦', '♥', '♠'];\nconst values = ['A', 'K', 'Q', 'J', 10, 9, 8, 7, 6, 5, 4, 3, 2].reverse();\n// export const letterValue = {'A': 14, 'K': 13, 'Q': 12, 'J': 11}\nconst rankingHands = ['high card', 'pair', 'two pairs', 'three of a kind', 'striaght', 'flush', 'full house', 'four of a kind', 'striaght flush', 'royal flush'];\nconst cardImgs = [[{\n  face: 2,\n  img: 'images/2-clover.png'\n}, {\n  face: 3,\n  img: 'images/3-clover.png'\n}, {\n  face: 4,\n  img: 'images/4-clover.png'\n}, {\n  face: 5,\n  img: 'images/5-clover.png'\n}, {\n  face: 6,\n  img: 'images/6-clover.png'\n}, {\n  face: 7,\n  img: 'images/7-clover.png'\n}, {\n  face: 8,\n  img: 'images/8-clover.png'\n}, {\n  face: 9,\n  img: 'images/9-clover.png'\n}, {\n  face: 10,\n  img: 'images/10-clover.png'\n}, {\n  face: 'J',\n  img: 'images/J-clover.png'\n}, {\n  face: 'Q',\n  img: 'images/Q-clover.png'\n}, {\n  face: 'K',\n  img: 'images/K-clover.png'\n}, {\n  face: 'A',\n  img: 'images/A-diamond.png'\n}], [{\n  face: 2,\n  img: 'images/2-diamond.png'\n}, {\n  face: 3,\n  img: 'images/3-diamond.png'\n}, {\n  face: 4,\n  img: 'images/4-diamond.png'\n}, {\n  face: 5,\n  img: 'images/5-diamond.png'\n}, {\n  face: 6,\n  img: 'images/6-diamond.png'\n}, {\n  face: 7,\n  img: 'images/7-diamond.png'\n}, {\n  face: 8,\n  img: 'images/8-diamond.png'\n}, {\n  face: 9,\n  img: 'images/9-diamond.png'\n}, {\n  face: 10,\n  img: 'images/10-diamond.png'\n}, {\n  face: 'J',\n  img: 'images/J-diamond.png'\n}, {\n  face: 'Q',\n  img: 'images/Q-diamond.png'\n}, {\n  face: 'K',\n  img: 'images/K-diamond.png'\n}, {\n  face: 'A',\n  img: 'images/A-diamond.png'\n}], [{\n  face: 2,\n  img: 'images/2-heart.png'\n}, {\n  face: 3,\n  img: 'images/3-heart.png'\n}, {\n  face: 4,\n  img: 'images/4-heart.png'\n}, {\n  face: 5,\n  img: 'images/5-heart.png'\n}, {\n  face: 6,\n  img: 'images/6-heart.png'\n}, {\n  face: 7,\n  img: 'images/7-heart.png'\n}, {\n  face: 8,\n  img: 'images/8-heart.png'\n}, {\n  face: 9,\n  img: 'images/9-heart.png'\n}, {\n  face: 10,\n  img: 'images/10-heart.png'\n}, {\n  face: 'J',\n  img: 'images/J-heart.png'\n}, {\n  face: 'Q',\n  img: 'images/Q-heart.png'\n}, {\n  face: 'K',\n  img: 'images/K-heart.png'\n}, {\n  face: 'A',\n  img: 'images/A-heart.png'\n}], [{\n  face: 2,\n  img: 'images/2-spade.png'\n}, {\n  face: 3,\n  img: 'images/3-spade.png'\n}, {\n  face: 4,\n  img: 'images/4-spade.png'\n}, {\n  face: 5,\n  img: 'images/5-spade.png'\n}, {\n  face: 6,\n  img: 'images/6-spade.png'\n}, {\n  face: 7,\n  img: 'images/7-spade.png'\n}, {\n  face: 8,\n  img: 'images/8-spade.png'\n}, {\n  face: 9,\n  img: 'images/9-clover.png'\n}, {\n  face: 10,\n  img: 'images/10-spade.png'\n}, {\n  face: 'J',\n  img: 'images/J-spade.png'\n}, {\n  face: 'Q',\n  img: 'images/Q-spade.png'\n}, {\n  face: 'K',\n  img: 'images/K-spade.png'\n}, {\n  face: 'A',\n  img: 'images/A-spade.png'\n}]];\nconst questions = [['Which hand is the strognest hand?'], ['Given the dealers hand, which hand now has the strongest hand?'], ['Given that all cards have been dealt, which hand has the strongest hand?']];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/util.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0LXBva2VyLWJsYWNramFjay8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;