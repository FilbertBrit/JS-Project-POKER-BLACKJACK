/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_cards_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/cards.js */ \"./src/scripts/cards.js\");\n/* harmony import */ var _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/util.js */ \"./src/scripts/util.js\");\n// import multiChoice from \"./scripts/multiple-choice-game.js\"\n// const PlayerHand = require('./scripts/player-hand.js');\n// import * as PlayerHand from \"./scripts/player-hand.js\"\n // importing function that created the deck\n // importing arrays of card values\n\n// const canvas = document.getElementById(\"canvas\")\n// canvas.width = 500;\n// canvas.height = 500;\n\nclass multiChoice {\n  constructor() {\n    // this.ctx = canvas.getContext('2d');\n\n    this.deck = (0,_scripts_cards_js__WEBPACK_IMPORTED_MODULE_0__.deckCreation)(); // deck used for multi-choice game\n    this.players = []; //array that will hold all hands of the current game\n    this.hands(5); // adds 5 players to the game, players array\n    this.dealer = new PlayerHand(this.deck); // creating dealer hand\n    this.dealer.addToHand.call(this.dealer, 3); // dealer always starts off with 3 cards\n  }\n\n  hands(num) {\n    // function for generating the num of players/hands wanted per game\n    for (let i = 0; i < num; i++) {\n      let player = new PlayerHand(this.deck); // creating a hand that also has a reference to the game's deck\n      player.addToHand.call(player, 2); //players/hands will only ever have two cards\n      this.players.push(player); //adding each hand to game's players array\n    }\n  }\n\n  printGame() {\n    // prints all cards in the game(dealer + players)\n    console.log(this.dealer.hand);\n    for (let i = 0; i < this.players.length; i++) {\n      console.log(this.players[i].hand);\n    }\n  }\n\n  // need to work on 4-of-kind occurance\n  bestHand(round) {\n    let tie = false;\n    let hand;\n    let currentHand;\n    if (round < 3) {\n      //working!!!\n\n      return this.roundOneToTwo.call(this);\n    } else if (this.dealer.hand.length < 5) {\n      //look for high card, pair, two pair, 3-of-a-kind, 4-of-a-kind\n\n      // console.log('IN ROUNDS 3-4')\n      let handIdx = [0];\n      hand = this.players[0].hand.concat(this.dealer.hand);\n      // console.log('hand');\n      // console.log(hand)\n\n      for (let i = 1; i < this.players.length; i++) {\n        // for(let i = 1; i < 2; i++){ //debugging purposes\n        currentHand = this.players[i].hand.concat(this.dealer.hand);\n        // console.log('current hand')\n        // console.log(currentHand);\n\n        //hashes to count pairs*\n        let handCount = {};\n        let currHandCount = {};\n        for (let i = 0; i < hand.length; i++) {\n          handCount[hand[i].value] ? handCount[hand[i].value].push(hand[i].value) : handCount[hand[i].value] = [hand[i].value];\n          currHandCount[currentHand[i].value] ? currHandCount[currentHand[i].value].push(currentHand[i].value) : currHandCount[currentHand[i].value] = [currentHand[i].value];\n        }\n        // console.log('hashes');\n        // console.log(handCount);\n        // console.log(currHandCount);\n\n        //^^ WORKING\n\n        if (Object.values(handCount).find(ele => ele.length === 4) || Object.values(currHandCount).find(ele => ele.length === 4)) {\n          // at least one player has four of a kind\n\n          let result = this.compareFourOfKind.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else if (Object.values(handCount).find(ele => ele.length === 3) || Object.values(currHandCount).find(ele => ele.length === 3)) {\n          // at least one player has 3 of a kind\n\n          let result = this.compareThreeOfKind.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else if (Object.values(handCount).find(arr => arr.length === 2) || Object.values(currHandCount).find(arr => arr.length === 2)) {\n          let result = this.comparePairs.call(this, hand, handCount, currentHand, currHandCount, handIdx, tie);\n          hand = result[0]; // return hand\n        } else {\n          // last look for highest card, of their 2 cards, WORKING!!!\n          let result = this.compareHandValues(hand, currentHand);\n          if (result == 'tie') {\n            tie = true;\n            handIdx.push(i);\n          } else if (result === currentHand) {\n            tie = false;\n            hand = currentHand;\n            handIdx = [i];\n          }\n        }\n      }\n      return hand.slice(0, 2);\n    } else {\n      //NEED TO WOKR ON THIS!! case: dealer has all 5 cards, now check for flush, straight, etc.\n\n      let result = this.lastRounds.call(this);\n      return result[0];\n    }\n  } //END OF BESTHAND FUNCTION\n\n  //done and working!!\n  roundOneToTwo() {\n    //WORKING!!\n    let tie = false;\n    let hand;\n    let currentHand;\n    hand = this.players[0].hand;\n    for (let i = 1; i < this.players.length; i++) {\n      // for(let i = 1; i < 2; i++){ //debugging purpose \n      currentHand = this.players[i].hand;\n      //booleans checking if any of the two have a pair\n      let handPair = hand[0].value === hand[1].value;\n      let currentHandPair = currentHand[0].value === currentHand[1].value;\n      if (handPair || currentHandPair) {\n        // at least one has a pair\n        if (handPair && currentHandPair) {\n          // if both, checking for highest card\n          if (hand[0].value === currentHand[0].value) {\n            tie = true;\n          } else {\n            hand = _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand[0].value) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currentHand[0].value) ? hand : currentHand;\n          }\n        } else {\n          hand = handPair ? hand : currentHand;\n        }\n      } else {\n        // no pair, just checking for highest card\n        let result = this.compareHandValues(hand, currentHand);\n        if (result === 'tie') {\n          tie = true;\n        } else if (result === currentHand) {\n          hand = result;\n        }\n      }\n    }\n    // if(tie) console.log(\"tie\")\n    // console.log('in roundOneToTwo')\n    // console.log(hand)\n    return hand;\n    // end of game logic for round 1-2\n  }\n\n  //need to work on this\n  lastRounds() {\n    // check for all possible hands then best, NEED TO WORK ON THIS!\n    let dealerHand = this.dealer.hand;\n    // console.log(dealerHand)\n    let hand = this.players[0].hand.concat(dealerHand);\n    // console.log(this.players[0].hand);\n\n    for (let i = 1; i < this.players.length; i++) {\n      let currentHand = this.players[i].hand.concat(dealerHand);\n      // need logic to check what kind of hand they have;\n    }\n\n    // if(tie) console.log(tie)\n    return hand;\n  }\n\n  //done and working!!\n  compareHandValues(hand1, hand2) {\n    // WORKING!!\n    let hand1Max = _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand1[0].value) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand1[1].value) ? _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand1[0].value) : _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand1[1].value);\n    let hand2Max = _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand2[0].value) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand2[1].value) ? _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand2[0].value) : _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(hand2[1].value);\n    // console.log(hand1Max)\n    // console.log(hand2Max)\n\n    let result;\n    if (hand1Max === hand2Max) {\n      result = 'tie';\n    } else if (hand1Max > hand2Max) {\n      result = hand1;\n    } else {\n      result = hand2;\n    }\n    // console.log('In compareHandValues')\n    // console.log(result)\n    return result;\n  }\n\n  //done, working!!\n  compareThreeOfKind(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    //done, working?\n    // console.log('in compareThreeOfKind');\n\n    let handThreeOfKind = Object.values(handCount).find(arr => arr.length === 3);\n    let currHandThreeOfKind = Object.values(currHandCount).find(arr => arr.length === 3);\n    if (handThreeOfKind && currHandThreeOfKind) {\n      //check if anyone has another 3-of-kind\n      if (Object.values(handCount).find(ele => ele.length === 3) || Object.values(currHandCount).find(ele => ele.length === 3)) {\n        let handThreeOfKindSecond = Object.values(handCount).find(arr => arr.length === 3 && arr[0] !== handThreeOfKind[0]);\n        let currHandThreeOfKindSecond = Object.values(currHandCount).find(arr => arr.length === 3 && arr[0] !== currHandThreeOfKind[0]);\n        if (handThreeOfKindSecond && currHandThreeOfKindSecond) {\n          let handBestThreeOfKind = _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handThreeOfKind[0]) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handThreeOfKindSecond[0]) ? handThreeOfKind : handThreeOfKindSecond;\n          let currHandBestThreeOfKind = _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandThreeOfKind[0]) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandThreeOfKindSecond[0]) ? currHandThreeOfKind : currHandThreeOfKindSecond;\n          if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handBestThreeOfKind[0]) === TIL.values.indexOf(currHandBestThreeOfKind[0])) {\n            tie = true;\n          } else if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handBestThreeOfKind[0]) < TIL.values.indexOf(currHandBestThreeOfKind[0])) {\n            hand = currentHand;\n            tie = false;\n          }\n        } else {\n          if (currHandCount) {\n            hand = currentHand;\n            tie = false;\n          }\n        }\n      } else if\n        //check if anyone has a pair as well\n      (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0])) {\n        let handPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]);\n        let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0]);\n        if (handPair && currHandPair) {\n          //what if a hand has two pairs\n          //both have 3-of-kind & pair, check if for greatest 3-of-kind\n          if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handThreeOfKind[0]) === _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandThreeOfKind[0])) {\n            //save 3-of-kind cards, then check for greatest pair\n            if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handPair[0]) === _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandPair[0])) {\n              tie = true;\n            } else if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handPair[0]) < _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandPair[0])) {\n              hand = currentHand;\n              tie = false;\n            }\n          } else if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handThreeOfKind[0]) < _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandThreeOfKind[0])) {\n            hand = currentHand;\n            tie = false;\n          }\n        } else {\n          //done\n          if (currHandPair) {\n            hand = currHandCount;\n            tie = false;\n          }\n        }\n      } else if (handThreeOfKind[0] === currHandThreeOfKind[0]) {\n        tie = true;\n      } else if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handThreeOfKind[0]) < _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandThreeOfKind[0])) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    } else {\n      //done\n      if (currHandThreeOfKind) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    }\n\n    return [hand, handIdx, tie];\n  }\n\n  //still need to work on this\n  compareFourOfKind(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    // console.log('in compareFourOfKind')\n    let handFourOfKind = Object.values(handCount).find(arr => arr.length === 4);\n    let currHandFourOfKind = Object.values(currHandCount).find(arr => arr.length === 4);\n    if (handFourOfKind && currHandFourOfKind) {\n      if (handFourOfKind[0] === currHandFourOfKind[0]) {\n        //check if anyone has a pair as well\n        if (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handFourOfKind[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandFourOfKind[0])) {\n          let handPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handThreeOfKind[0]);\n          let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandThreeOfKind[0]);\n          if (handPair && currHandPair) {\n            if (handPair[0] === currHandPair[0]) {\n              tie = true;\n            } else {\n              if (currHandPair) {\n                hand = currentHand;\n                tie = false;\n              }\n            }\n          } else {\n            if (currHandPair) {\n              hand = currHandCount;\n              tie = false;\n            }\n          }\n        } else {\n          tie = true;\n          // handIdx.push(i);\n        }\n      } else if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handThreeOfKind[0]) < _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandThreeOfKind[0])) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    } else {\n      if (currHandThreeOfKind) {\n        hand = currentHand;\n        // handIdx[0] = i;\n      }\n    }\n\n    return [hand, handIdx, tie];\n  }\n\n  //done and working!!!\n  comparePairs(hand, handCount, currentHand, currHandCount, handIdx, tie) {\n    // working!!\n    let handPair = Object.values(handCount).find(arr => arr.length === 2);\n    let currHandPair = Object.values(currHandCount).find(arr => arr.length === 2);\n    // console.log(handPair)\n    // console.log(currHandPair)\n\n    //check if pair is amoung only dealer's hand, still need to work on this\n    if (handPair && currHandPair) {\n      // both have a pair\n      // console.log('hi')\n\n      if (Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handPair[0]) || Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandPair[0])) {\n        //atleast one has two pairs, WOKRING!!!\n        //check who has the second pair if not both\n        let secondHandPair = Object.values(handCount).find(arr => arr.length === 2 && arr[0] !== handPair[0]);\n        let secondCurrHandPair = Object.values(currHandCount).find(arr => arr.length === 2 && arr[0] !== currHandPair[0]);\n        // console.log(secondHandPair);\n        // console.log(secondCurrHandPair);\n\n        if (secondHandPair && secondCurrHandPair) {\n          if (secondHandPair[0] === secondCurrHandPair[0]) {\n            tie = true;\n            // handIdx.push(i);\n          } else {\n            if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(secondHandPair[0]) < _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(secondCurrHandPair[0])) {\n              hand = currentHand;\n              tie = false;\n              // handCount = [i];\n            }\n          }\n        } else {\n          // WORKING!!\n          if (secondCurrHandPair) {\n            hand = currentHand;\n            tie = false;\n            // handIdx = [i];\n          }\n        }\n      } else {\n        // look for the pair with the highest value, WOKRING!!!\n        if (handPair[0] === currHandPair[0]) {\n          tie = true;\n          // handIdx.push(i);\n          // console.log(tie);\n        } else {\n          if (_scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(currHandPair[0]) > _scripts_util_js__WEBPACK_IMPORTED_MODULE_1__.values.indexOf(handPair[0])) {\n            tie = false;\n            hand = currentHand;\n            // handIdx = [i];\n          }\n        }\n      }\n    } else {\n      // check if currHand is the one with the pair, WORKING!!!!\n      // console.log('one pair')\n      if (currHandPair) {\n        tie = false;\n        hand = currentHand;\n        // handIdx = [i];\n      }\n    }\n\n    // console.log('in ComparePairs')\n    // console.log(hand);\n    return [hand, handIdx, tie];\n  }\n}\nclass PlayerHand {\n  // fine, dont touch\n  constructor(deck) {\n    this.deck = deck; // reference to the game's card deck\n    this.hand = []; // array that will hold this player's cards\n  }\n\n  addToHand(num) {\n    // maybe add a random way either pop/shift\n    //take a card from deck and add to hand, remove card from deck\n    while (num > 0) {\n      this.hand.push(this.deck.shift());\n      num--;\n    }\n  }\n}\n\n//have a do loop to create new multChoice games/questions, condition: answer must be right\n\nlet game = new multiChoice();\n// game.hands.call(game, 5);\nconsole.log(game);\ngame.printGame.call(game, 5);\ngame.dealer.addToHand.call(game.dealer, 1);\n// console.log(\"dealer hand\")\n// console.log(game.dealer.hand)\nconsole.log('Winner Hand');\nconsole.log(game.bestHand.call(game, 3));\n\n///build a database with possible questions to query for to use during each round\n\nconst canvas = document.querySelector('#canvas');\ncreateTable(game);\nfunction createTable(game) {\n  for (let i = 0; i < 1; i++) {\n    // const playerHand = game.players[i].hand\n    // const cardOne = document.createElement('img');\n    // const cardTwo = document.createElement('img');\n\n    // UTIL.suits.indexOf(currHandPair[0])\n\n    // const cardOneImg = UTIL.cardImgs.find({name} => (name === playerHand[0].suit.concat('-').concat(playerHand[0].value.toString()))\n    // const cardTwoImg = UTIL.cardImgs.find((card) => {\n    //     let attribues = card.name.split(\"-\")\n\n    //     attribues[0] === playerHand[1].suit && parseInt(attribues[1]) === playerHand[1].value\n    // })\n    // console.log(cardOneImg);\n    // console.log(cardTwoImg);\n    // cardOne.setAttribute('src', cardOneImg[img])\n    // cardTwo.setAttribute('src', cardTwoImg[img])\n\n    // console.log(cardOne);\n    // console.log(cardTwo);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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NUJBLElBQUksQ0FBQ3hELE1BQU0sQ0FBQ0UsU0FBUyxDQUFDQyxJQUFJLENBQUNxRCxJQUFJLENBQUN4RCxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBQzFDO0FBQ0E7QUFDQVMsT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYSxDQUFDO0FBQzFCRCxPQUFPLENBQUNDLEdBQUcsQ0FBQzhDLElBQUksQ0FBQzNDLFFBQVEsQ0FBQ1YsSUFBSSxDQUFDcUQsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDOztBQUV4Qzs7QUFHQSxNQUFNQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFNBQVMsQ0FBQztBQUNoREMsV0FBVyxDQUFDSixJQUFJLENBQUM7QUFFakIsU0FBU0ksV0FBV0EsQ0FBQ0osSUFBSSxFQUFDO0VBQ3RCLEtBQUksSUFBSW5ELENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsRUFBRSxFQUFDO0lBQ3RCO0lBQ0E7SUFDQTs7SUFFQTs7SUFFQTtJQUNBO0lBQ0E7O0lBRUE7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBOztJQUVBO0lBQ0E7RUFBQTtBQUVSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMtcHJvamVjdC1wb2tlci1ibGFja2phY2svLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgbXVsdGlDaG9pY2UgZnJvbSBcIi4vc2NyaXB0cy9tdWx0aXBsZS1jaG9pY2UtZ2FtZS5qc1wiXG4vLyBjb25zdCBQbGF5ZXJIYW5kID0gcmVxdWlyZSgnLi9zY3JpcHRzL3BsYXllci1oYW5kLmpzJyk7XG4vLyBpbXBvcnQgKiBhcyBQbGF5ZXJIYW5kIGZyb20gXCIuL3NjcmlwdHMvcGxheWVyLWhhbmQuanNcIlxuaW1wb3J0IHsgZGVja0NyZWF0aW9uIH0gZnJvbSBcIi4vc2NyaXB0cy9jYXJkcy5qc1wiOyAvLyBpbXBvcnRpbmcgZnVuY3Rpb24gdGhhdCBjcmVhdGVkIHRoZSBkZWNrXG5pbXBvcnQgKiBhcyBVVElMIGZyb20gXCIuL3NjcmlwdHMvdXRpbC5qc1wiIC8vIGltcG9ydGluZyBhcnJheXMgb2YgY2FyZCB2YWx1ZXNcblxuLy8gY29uc3QgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIilcbi8vIGNhbnZhcy53aWR0aCA9IDUwMDtcbi8vIGNhbnZhcy5oZWlnaHQgPSA1MDA7XG5cbmNsYXNzIG11bHRpQ2hvaWNlIHsgXG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgLy8gdGhpcy5jdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcblxuICAgICAgICB0aGlzLmRlY2sgPSBkZWNrQ3JlYXRpb24oKTsgLy8gZGVjayB1c2VkIGZvciBtdWx0aS1jaG9pY2UgZ2FtZVxuICAgICAgICB0aGlzLnBsYXllcnMgPSBbXTsgLy9hcnJheSB0aGF0IHdpbGwgaG9sZCBhbGwgaGFuZHMgb2YgdGhlIGN1cnJlbnQgZ2FtZVxuICAgICAgICB0aGlzLmhhbmRzKDUpIC8vIGFkZHMgNSBwbGF5ZXJzIHRvIHRoZSBnYW1lLCBwbGF5ZXJzIGFycmF5XG4gICAgICAgIHRoaXMuZGVhbGVyID0gbmV3IFBsYXllckhhbmQodGhpcy5kZWNrKTsgLy8gY3JlYXRpbmcgZGVhbGVyIGhhbmRcbiAgICAgICAgdGhpcy5kZWFsZXIuYWRkVG9IYW5kLmNhbGwodGhpcy5kZWFsZXIsIDMpIC8vIGRlYWxlciBhbHdheXMgc3RhcnRzIG9mZiB3aXRoIDMgY2FyZHNcbiAgICB9XG5cbiAgICBoYW5kcyhudW0peyAvLyBmdW5jdGlvbiBmb3IgZ2VuZXJhdGluZyB0aGUgbnVtIG9mIHBsYXllcnMvaGFuZHMgd2FudGVkIHBlciBnYW1lXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBudW07IGkrKyl7XG4gICAgICAgICAgICBsZXQgcGxheWVyID0gbmV3IFBsYXllckhhbmQodGhpcy5kZWNrKSAvLyBjcmVhdGluZyBhIGhhbmQgdGhhdCBhbHNvIGhhcyBhIHJlZmVyZW5jZSB0byB0aGUgZ2FtZSdzIGRlY2tcbiAgICAgICAgICAgIHBsYXllci5hZGRUb0hhbmQuY2FsbChwbGF5ZXIsIDIpIC8vcGxheWVycy9oYW5kcyB3aWxsIG9ubHkgZXZlciBoYXZlIHR3byBjYXJkc1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXJzLnB1c2gocGxheWVyKSAvL2FkZGluZyBlYWNoIGhhbmQgdG8gZ2FtZSdzIHBsYXllcnMgYXJyYXlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaW50R2FtZSgpeyAvLyBwcmludHMgYWxsIGNhcmRzIGluIHRoZSBnYW1lKGRlYWxlciArIHBsYXllcnMpXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGVhbGVyLmhhbmQpXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB0aGlzLnBsYXllcnMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wbGF5ZXJzW2ldLmhhbmQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gbmVlZCB0byB3b3JrIG9uIDQtb2Yta2luZCBvY2N1cmFuY2VcbiAgICBiZXN0SGFuZChyb3VuZCl7XG4gICAgICAgIGxldCB0aWUgPSBmYWxzZTtcbiAgICAgICAgbGV0IGhhbmQ7XG4gICAgICAgIGxldCBjdXJyZW50SGFuZDtcblxuICAgICAgICBpZihyb3VuZCA8IDMpeyAvL3dvcmtpbmchISFcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucm91bmRPbmVUb1R3by5jYWxsKHRoaXMpO1xuXG4gICAgICAgIH0gZWxzZSBpZih0aGlzLmRlYWxlci5oYW5kLmxlbmd0aCA8IDUpeyAvL2xvb2sgZm9yIGhpZ2ggY2FyZCwgcGFpciwgdHdvIHBhaXIsIDMtb2YtYS1raW5kLCA0LW9mLWEta2luZFxuXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnSU4gUk9VTkRTIDMtNCcpXG4gICAgICAgICAgICBsZXQgaGFuZElkeCA9IFswXTtcbiAgICAgICAgICAgIGhhbmQgPSB0aGlzLnBsYXllcnNbMF0uaGFuZC5jb25jYXQodGhpcy5kZWFsZXIuaGFuZClcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdoYW5kJyk7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhoYW5kKVxuXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAxOyBpIDwgdGhpcy5wbGF5ZXJzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIC8vIGZvcihsZXQgaSA9IDE7IGkgPCAyOyBpKyspeyAvL2RlYnVnZ2luZyBwdXJwb3Nlc1xuICAgICAgICAgICAgICAgIGN1cnJlbnRIYW5kID0gdGhpcy5wbGF5ZXJzW2ldLmhhbmQuY29uY2F0KHRoaXMuZGVhbGVyLmhhbmQpXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ2N1cnJlbnQgaGFuZCcpXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY3VycmVudEhhbmQpO1xuXG4gICAgICAgICAgICAgICAgLy9oYXNoZXMgdG8gY291bnQgcGFpcnMqXG4gICAgICAgICAgICAgICAgbGV0IGhhbmRDb3VudCA9IHt9O1xuICAgICAgICAgICAgICAgIGxldCBjdXJySGFuZENvdW50ID0ge307XG4gICAgICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGhhbmQubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgICAgICAoaGFuZENvdW50W2hhbmRbaV0udmFsdWVdKSA/IGhhbmRDb3VudFtoYW5kW2ldLnZhbHVlXS5wdXNoKGhhbmRbaV0udmFsdWUpIDogaGFuZENvdW50W2hhbmRbaV0udmFsdWVdID0gW2hhbmRbaV0udmFsdWVdO1xuICAgICAgICAgICAgICAgICAgICAoY3VyckhhbmRDb3VudFtjdXJyZW50SGFuZFtpXS52YWx1ZV0pID8gY3VyckhhbmRDb3VudFtjdXJyZW50SGFuZFtpXS52YWx1ZV0ucHVzaChjdXJyZW50SGFuZFtpXS52YWx1ZSkgOiBjdXJySGFuZENvdW50W2N1cnJlbnRIYW5kW2ldLnZhbHVlXSA9IFtjdXJyZW50SGFuZFtpXS52YWx1ZV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdoYXNoZXMnKTtcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhoYW5kQ291bnQpO1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGN1cnJIYW5kQ291bnQpO1xuXG4gICAgICAgICAgICAgICAgLy9eXiBXT1JLSU5HXG5cbiAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LnZhbHVlcyhoYW5kQ291bnQpLmZpbmQoKGVsZSkgPT4gZWxlLmxlbmd0aCA9PT0gNCkgfHwgT2JqZWN0LnZhbHVlcyhjdXJySGFuZENvdW50KS5maW5kKChlbGUpID0+IGVsZS5sZW5ndGggPT09IDQpKXsgLy8gYXQgbGVhc3Qgb25lIHBsYXllciBoYXMgZm91ciBvZiBhIGtpbmRcblxuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gdGhpcy5jb21wYXJlRm91ck9mS2luZC5jYWxsKHRoaXMsIGhhbmQsIGhhbmRDb3VudCwgY3VycmVudEhhbmQsIGN1cnJIYW5kQ291bnQsIGhhbmRJZHgsIHRpZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgaGFuZCA9IHJlc3VsdFswXTsgLy8gcmV0dXJuIGhhbmRcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfWVsc2UgaWYgKE9iamVjdC52YWx1ZXMoaGFuZENvdW50KS5maW5kKChlbGUpID0+IGVsZS5sZW5ndGggPT09IDMpIHx8IE9iamVjdC52YWx1ZXMoY3VyckhhbmRDb3VudCkuZmluZCgoZWxlKSA9PiBlbGUubGVuZ3RoID09PSAzKSl7IC8vIGF0IGxlYXN0IG9uZSBwbGF5ZXIgaGFzIDMgb2YgYSBraW5kXG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3VsdCA9IHRoaXMuY29tcGFyZVRocmVlT2ZLaW5kLmNhbGwodGhpcywgaGFuZCwgaGFuZENvdW50LCBjdXJyZW50SGFuZCwgY3VyckhhbmRDb3VudCwgaGFuZElkeCwgdGllKTtcblxuICAgICAgICAgICAgICAgICAgICBoYW5kID0gcmVzdWx0WzBdOyAvLyByZXR1cm4gaGFuZFxuXG4gICAgICAgICAgICAgICAgfWVsc2UgaWYgKE9iamVjdC52YWx1ZXMoaGFuZENvdW50KS5maW5kKChhcnIpID0+IGFyci5sZW5ndGggPT09IDIpIHx8IE9iamVjdC52YWx1ZXMoY3VyckhhbmRDb3VudCkuZmluZCgoYXJyKSA9PiBhcnIubGVuZ3RoID09PSAyKSl7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gdGhpcy5jb21wYXJlUGFpcnMuY2FsbCh0aGlzLCBoYW5kLCBoYW5kQ291bnQsIGN1cnJlbnRIYW5kLCBjdXJySGFuZENvdW50LCBoYW5kSWR4LCB0aWUpO1xuICAgICAgICAgICAgICAgICAgICBoYW5kID0gcmVzdWx0WzBdOyAvLyByZXR1cm4gaGFuZFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9ZWxzZXsgLy8gbGFzdCBsb29rIGZvciBoaWdoZXN0IGNhcmQsIG9mIHRoZWlyIDIgY2FyZHMsIFdPUktJTkchISFcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3VsdCA9IHRoaXMuY29tcGFyZUhhbmRWYWx1ZXMoaGFuZCwgY3VycmVudEhhbmQpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdCA9PSAndGllJyl7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aWUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZElkeC5wdXNoKGkpO1xuICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZiAocmVzdWx0ID09PSBjdXJyZW50SGFuZCl7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aWUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmQgPSBjdXJyZW50SGFuZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRJZHggPSBbaV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaGFuZC5zbGljZSgwLDIpO1xuICAgICAgICB9ZWxzZXsgLy9ORUVEIFRPIFdPS1IgT04gVEhJUyEhIGNhc2U6IGRlYWxlciBoYXMgYWxsIDUgY2FyZHMsIG5vdyBjaGVjayBmb3IgZmx1c2gsIHN0cmFpZ2h0LCBldGMuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSB0aGlzLmxhc3RSb3VuZHMuY2FsbCh0aGlzKTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHRbMF07XG4gICAgICAgICAgICBcbiAgICAgICAgfSBcbiAgICB9Ly9FTkQgT0YgQkVTVEhBTkQgRlVOQ1RJT05cblxuICAgIC8vZG9uZSBhbmQgd29ya2luZyEhXG4gICAgcm91bmRPbmVUb1R3bygpeyAvL1dPUktJTkchIVxuICAgICAgICBsZXQgdGllID0gZmFsc2U7XG4gICAgICAgIGxldCBoYW5kO1xuICAgICAgICBsZXQgY3VycmVudEhhbmQ7XG5cbiAgICAgICAgaGFuZCA9IHRoaXMucGxheWVyc1swXS5oYW5kO1xuICAgICAgICBmb3IobGV0IGkgPSAxOyBpIDwgdGhpcy5wbGF5ZXJzLmxlbmd0aDsgaSsrKXsgXG4gICAgICAgIC8vIGZvcihsZXQgaSA9IDE7IGkgPCAyOyBpKyspeyAvL2RlYnVnZ2luZyBwdXJwb3NlIFxuICAgICAgICAgICAgY3VycmVudEhhbmQgPSB0aGlzLnBsYXllcnNbaV0uaGFuZDtcbiAgICAgICAgICAgIC8vYm9vbGVhbnMgY2hlY2tpbmcgaWYgYW55IG9mIHRoZSB0d28gaGF2ZSBhIHBhaXJcbiAgICAgICAgICAgIGxldCBoYW5kUGFpciA9IGhhbmRbMF0udmFsdWUgPT09IGhhbmRbMV0udmFsdWU7XG4gICAgICAgICAgICBsZXQgY3VycmVudEhhbmRQYWlyID0gY3VycmVudEhhbmRbMF0udmFsdWUgPT09IGN1cnJlbnRIYW5kWzFdLnZhbHVlOyBcblxuICAgICAgICAgICAgaWYoaGFuZFBhaXIgfHwgY3VycmVudEhhbmRQYWlyKXsgLy8gYXQgbGVhc3Qgb25lIGhhcyBhIHBhaXJcbiAgICAgICAgICAgICAgICBpZihoYW5kUGFpciAmJiBjdXJyZW50SGFuZFBhaXIpeyAvLyBpZiBib3RoLCBjaGVja2luZyBmb3IgaGlnaGVzdCBjYXJkXG4gICAgICAgICAgICAgICAgICAgIGlmKGhhbmRbMF0udmFsdWUgPT09IGN1cnJlbnRIYW5kWzBdLnZhbHVlKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZCA9IChVVElMLnZhbHVlcy5pbmRleE9mKGhhbmRbMF0udmFsdWUpID4gVVRJTC52YWx1ZXMuaW5kZXhPZihjdXJyZW50SGFuZFswXS52YWx1ZSkgPyBoYW5kIDogY3VycmVudEhhbmQpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgaGFuZCA9IChoYW5kUGFpciA/IGhhbmQgOiBjdXJyZW50SGFuZClcbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgfWVsc2V7IC8vIG5vIHBhaXIsIGp1c3QgY2hlY2tpbmcgZm9yIGhpZ2hlc3QgY2FyZFxuICAgICAgICAgICAgICAgIGxldCByZXN1bHQgPSB0aGlzLmNvbXBhcmVIYW5kVmFsdWVzKGhhbmQsIGN1cnJlbnRIYW5kKTtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0ID09PSAndGllJyl7XG4gICAgICAgICAgICAgICAgICAgIHRpZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfWVsc2UgaWYgKHJlc3VsdCA9PT0gY3VycmVudEhhbmQpe1xuICAgICAgICAgICAgICAgICAgICBoYW5kID0gcmVzdWx0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBpZih0aWUpIGNvbnNvbGUubG9nKFwidGllXCIpXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdpbiByb3VuZE9uZVRvVHdvJylcbiAgICAgICAgLy8gY29uc29sZS5sb2coaGFuZClcbiAgICAgICAgcmV0dXJuIGhhbmQ7XG4gICAgICAgIC8vIGVuZCBvZiBnYW1lIGxvZ2ljIGZvciByb3VuZCAxLTJcbiAgICB9XG5cbiAgICAvL25lZWQgdG8gd29yayBvbiB0aGlzXG4gICAgbGFzdFJvdW5kcygpeyAvLyBjaGVjayBmb3IgYWxsIHBvc3NpYmxlIGhhbmRzIHRoZW4gYmVzdCwgTkVFRCBUTyBXT1JLIE9OIFRISVMhXG4gICAgICAgIGxldCBkZWFsZXJIYW5kID0gdGhpcy5kZWFsZXIuaGFuZDtcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGVhbGVySGFuZClcbiAgICAgICAgbGV0IGhhbmQgPSB0aGlzLnBsYXllcnNbMF0uaGFuZC5jb25jYXQoZGVhbGVySGFuZCk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucGxheWVyc1swXS5oYW5kKTtcblxuICAgICAgICBmb3IobGV0IGkgPSAxOyBpIDwgdGhpcy5wbGF5ZXJzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIGxldCBjdXJyZW50SGFuZCA9IHRoaXMucGxheWVyc1tpXS5oYW5kLmNvbmNhdChkZWFsZXJIYW5kKTtcbiAgICAgICAgICAgIC8vIG5lZWQgbG9naWMgdG8gY2hlY2sgd2hhdCBraW5kIG9mIGhhbmQgdGhleSBoYXZlO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYodGllKSBjb25zb2xlLmxvZyh0aWUpXG4gICAgICAgIHJldHVybiBoYW5kO1xuICAgIH1cblxuICAgIC8vZG9uZSBhbmQgd29ya2luZyEhXG4gICAgY29tcGFyZUhhbmRWYWx1ZXMoaGFuZDEsIGhhbmQyKXsgLy8gV09SS0lORyEhXG4gICAgICAgIGxldCBoYW5kMU1heCA9IChVVElMLnZhbHVlcy5pbmRleE9mKGhhbmQxWzBdLnZhbHVlKSA+IFVUSUwudmFsdWVzLmluZGV4T2YoaGFuZDFbMV0udmFsdWUpKSA/IFVUSUwudmFsdWVzLmluZGV4T2YoaGFuZDFbMF0udmFsdWUpIDogVVRJTC52YWx1ZXMuaW5kZXhPZihoYW5kMVsxXS52YWx1ZSk7XG4gICAgICAgIGxldCBoYW5kMk1heCA9IChVVElMLnZhbHVlcy5pbmRleE9mKGhhbmQyWzBdLnZhbHVlKSA+IFVUSUwudmFsdWVzLmluZGV4T2YoaGFuZDJbMV0udmFsdWUpKSA/IFVUSUwudmFsdWVzLmluZGV4T2YoaGFuZDJbMF0udmFsdWUpIDogVVRJTC52YWx1ZXMuaW5kZXhPZihoYW5kMlsxXS52YWx1ZSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGhhbmQxTWF4KVxuICAgICAgICAvLyBjb25zb2xlLmxvZyhoYW5kMk1heClcblxuICAgICAgICBsZXQgcmVzdWx0O1xuICAgICAgICBpZiAoaGFuZDFNYXggPT09IGhhbmQyTWF4KXtcbiAgICAgICAgICAgIHJlc3VsdCA9ICd0aWUnO1xuICAgICAgICB9ZWxzZSBpZiAoaGFuZDFNYXggPiBoYW5kMk1heCl7XG4gICAgICAgICAgICByZXN1bHQgPSBoYW5kMVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHJlc3VsdCA9IGhhbmQyXG4gICAgICAgIH1cbiAgICAgICAgLy8gY29uc29sZS5sb2coJ0luIGNvbXBhcmVIYW5kVmFsdWVzJylcbiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0KVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgfVxuXG4gICAgLy9kb25lLCB3b3JraW5nISFcbiAgICBjb21wYXJlVGhyZWVPZktpbmQoaGFuZCwgaGFuZENvdW50LCBjdXJyZW50SGFuZCwgY3VyckhhbmRDb3VudCwgaGFuZElkeCwgdGllKXsgLy9kb25lLCB3b3JraW5nP1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnaW4gY29tcGFyZVRocmVlT2ZLaW5kJyk7XG5cbiAgICAgICAgbGV0IGhhbmRUaHJlZU9mS2luZCA9IE9iamVjdC52YWx1ZXMoaGFuZENvdW50KS5maW5kKChhcnIpID0+IGFyci5sZW5ndGggPT09IDMpO1xuICAgICAgICBsZXQgY3VyckhhbmRUaHJlZU9mS2luZCA9IE9iamVjdC52YWx1ZXMoY3VyckhhbmRDb3VudCkuZmluZCgoYXJyKSA9PiBhcnIubGVuZ3RoID09PSAzKTtcbiAgICAgICAgXG4gICAgICAgIGlmKGhhbmRUaHJlZU9mS2luZCAmJiBjdXJySGFuZFRocmVlT2ZLaW5kKXtcbiAgICAgICAgICAgIC8vY2hlY2sgaWYgYW55b25lIGhhcyBhbm90aGVyIDMtb2Yta2luZFxuICAgICAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoaGFuZENvdW50KS5maW5kKChlbGUpID0+IGVsZS5sZW5ndGggPT09IDMpIHx8IE9iamVjdC52YWx1ZXMoY3VyckhhbmRDb3VudCkuZmluZCgoZWxlKSA9PiBlbGUubGVuZ3RoID09PSAzKSl7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsZXQgaGFuZFRocmVlT2ZLaW5kU2Vjb25kID0gT2JqZWN0LnZhbHVlcyhoYW5kQ291bnQpLmZpbmQoKGFycikgPT4gYXJyLmxlbmd0aCA9PT0gMyAmJiBhcnJbMF0gIT09IGhhbmRUaHJlZU9mS2luZFswXSk7XG4gICAgICAgICAgICAgICAgbGV0IGN1cnJIYW5kVGhyZWVPZktpbmRTZWNvbmQgPSBPYmplY3QudmFsdWVzKGN1cnJIYW5kQ291bnQpLmZpbmQoKGFycikgPT4gYXJyLmxlbmd0aCA9PT0gMyAmJiBhcnJbMF0gIT09IGN1cnJIYW5kVGhyZWVPZktpbmRbMF0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYoaGFuZFRocmVlT2ZLaW5kU2Vjb25kICYmIGN1cnJIYW5kVGhyZWVPZktpbmRTZWNvbmQpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgaGFuZEJlc3RUaHJlZU9mS2luZCA9IChVVElMLnZhbHVlcy5pbmRleE9mKGhhbmRUaHJlZU9mS2luZFswXSkgPiBVVElMLnZhbHVlcy5pbmRleE9mKGhhbmRUaHJlZU9mS2luZFNlY29uZFswXSkpID8gaGFuZFRocmVlT2ZLaW5kIDogaGFuZFRocmVlT2ZLaW5kU2Vjb25kO1xuICAgICAgICAgICAgICAgICAgICBsZXQgY3VyckhhbmRCZXN0VGhyZWVPZktpbmQgPSAoVVRJTC52YWx1ZXMuaW5kZXhPZihjdXJySGFuZFRocmVlT2ZLaW5kWzBdKSA+IFVUSUwudmFsdWVzLmluZGV4T2YoY3VyckhhbmRUaHJlZU9mS2luZFNlY29uZFswXSkpID8gY3VyckhhbmRUaHJlZU9mS2luZCA6IGN1cnJIYW5kVGhyZWVPZktpbmRTZWNvbmQ7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYoKFVUSUwudmFsdWVzLmluZGV4T2YoaGFuZEJlc3RUaHJlZU9mS2luZFswXSkgPT09IFRJTC52YWx1ZXMuaW5kZXhPZihjdXJySGFuZEJlc3RUaHJlZU9mS2luZFswXSkpKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1lbHNlIGlmKFVUSUwudmFsdWVzLmluZGV4T2YoaGFuZEJlc3RUaHJlZU9mS2luZFswXSkgPCBUSUwudmFsdWVzLmluZGV4T2YoY3VyckhhbmRCZXN0VGhyZWVPZktpbmRbMF0pKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmQgPSBjdXJyZW50SGFuZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIGlmKGN1cnJIYW5kQ291bnQpe1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZCA9IGN1cnJlbnRIYW5kO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGllID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1lbHNlIGlmXG4gICAgICAgICAgICAvL2NoZWNrIGlmIGFueW9uZSBoYXMgYSBwYWlyIGFzIHdlbGxcbiAgICAgICAgICAgIChPYmplY3QudmFsdWVzKGhhbmRDb3VudCkuZmluZCgoYXJyKSA9PiBhcnIubGVuZ3RoID09PSAyICYmIGFyclswXSAhPT0gaGFuZFRocmVlT2ZLaW5kWzBdKSB8fCBPYmplY3QudmFsdWVzKGN1cnJIYW5kQ291bnQpLmZpbmQoKGFycikgPT4gYXJyLmxlbmd0aCA9PT0gMiAmJiBhcnJbMF0gIT09IGN1cnJIYW5kVGhyZWVPZktpbmRbMF0pKXtcblxuICAgICAgICAgICAgICAgIGxldCBoYW5kUGFpciA9IE9iamVjdC52YWx1ZXMoaGFuZENvdW50KS5maW5kKChhcnIpID0+IGFyci5sZW5ndGggPT09IDIgJiYgYXJyWzBdICE9PSBoYW5kVGhyZWVPZktpbmRbMF0pO1xuICAgICAgICAgICAgICAgIGxldCBjdXJySGFuZFBhaXIgPSBPYmplY3QudmFsdWVzKGN1cnJIYW5kQ291bnQpLmZpbmQoKGFycikgPT4gYXJyLmxlbmd0aCA9PT0gMiAmJiBhcnJbMF0gIT09IGN1cnJIYW5kVGhyZWVPZktpbmRbMF0pO1xuXG4gICAgICAgICAgICAgICAgaWYoaGFuZFBhaXIgJiYgY3VyckhhbmRQYWlyKXtcbiAgICAgICAgICAgICAgICAgICAgLy93aGF0IGlmIGEgaGFuZCBoYXMgdHdvIHBhaXJzXG4gICAgICAgICAgICAgICAgICAgIC8vYm90aCBoYXZlIDMtb2Yta2luZCAmIHBhaXIsIGNoZWNrIGlmIGZvciBncmVhdGVzdCAzLW9mLWtpbmRcbiAgICAgICAgICAgICAgICAgICAgaWYoVVRJTC52YWx1ZXMuaW5kZXhPZihoYW5kVGhyZWVPZktpbmRbMF0pID09PSBVVElMLnZhbHVlcy5pbmRleE9mKGN1cnJIYW5kVGhyZWVPZktpbmRbMF0pKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vc2F2ZSAzLW9mLWtpbmQgY2FyZHMsIHRoZW4gY2hlY2sgZm9yIGdyZWF0ZXN0IHBhaXJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKFVUSUwudmFsdWVzLmluZGV4T2YoaGFuZFBhaXJbMF0pID09PSBVVElMLnZhbHVlcy5pbmRleE9mKGN1cnJIYW5kUGFpclswXSkpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZihVVElMLnZhbHVlcy5pbmRleE9mKGhhbmRQYWlyWzBdKSA8IFVUSUwudmFsdWVzLmluZGV4T2YoY3VyckhhbmRQYWlyWzBdKSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZCA9IGN1cnJlbnRIYW5kO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZihVVElMLnZhbHVlcy5pbmRleE9mKGhhbmRUaHJlZU9mS2luZFswXSkgPCBVVElMLnZhbHVlcy5pbmRleE9mKGN1cnJIYW5kVGhyZWVPZktpbmRbMF0pKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmQgPSBjdXJyZW50SGFuZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfWVsc2V7IC8vZG9uZVxuICAgICAgICAgICAgICAgICAgICBpZihjdXJySGFuZFBhaXIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZCA9IGN1cnJIYW5kQ291bnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aWUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1lbHNlIGlmKGhhbmRUaHJlZU9mS2luZFswXSA9PT0gY3VyckhhbmRUaHJlZU9mS2luZFswXSl7XG4gICAgICAgICAgICAgICAgdGllID0gdHJ1ZTtcbiAgICAgICAgICAgIH1lbHNlIGlmIChVVElMLnZhbHVlcy5pbmRleE9mKGhhbmRUaHJlZU9mS2luZFswXSkgPCBVVElMLnZhbHVlcy5pbmRleE9mKGN1cnJIYW5kVGhyZWVPZktpbmRbMF0pKXtcbiAgICAgICAgICAgICAgICBoYW5kID0gY3VycmVudEhhbmQ7XG4gICAgICAgICAgICAgICAgLy8gaGFuZElkeFswXSA9IGk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1lbHNley8vZG9uZVxuICAgICAgICAgICAgaWYgKGN1cnJIYW5kVGhyZWVPZktpbmQpe1xuICAgICAgICAgICAgICAgIGhhbmQgPSBjdXJyZW50SGFuZDtcbiAgICAgICAgICAgICAgICAvLyBoYW5kSWR4WzBdID0gaTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBbaGFuZCwgaGFuZElkeCwgdGllXTtcbiAgICB9XG5cbiAgICAvL3N0aWxsIG5lZWQgdG8gd29yayBvbiB0aGlzXG4gICAgY29tcGFyZUZvdXJPZktpbmQoaGFuZCwgaGFuZENvdW50LCBjdXJyZW50SGFuZCwgY3VyckhhbmRDb3VudCwgaGFuZElkeCwgdGllKXtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ2luIGNvbXBhcmVGb3VyT2ZLaW5kJylcbiAgICAgICAgbGV0IGhhbmRGb3VyT2ZLaW5kID0gT2JqZWN0LnZhbHVlcyhoYW5kQ291bnQpLmZpbmQoKGFycikgPT4gYXJyLmxlbmd0aCA9PT0gNCk7XG4gICAgICAgIGxldCBjdXJySGFuZEZvdXJPZktpbmQgPSBPYmplY3QudmFsdWVzKGN1cnJIYW5kQ291bnQpLmZpbmQoKGFycikgPT4gYXJyLmxlbmd0aCA9PT0gNCk7XG5cbiAgICAgICAgaWYoaGFuZEZvdXJPZktpbmQgJiYgY3VyckhhbmRGb3VyT2ZLaW5kKXtcblxuICAgICAgICAgICAgaWYoaGFuZEZvdXJPZktpbmRbMF0gPT09IGN1cnJIYW5kRm91ck9mS2luZFswXSl7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvL2NoZWNrIGlmIGFueW9uZSBoYXMgYSBwYWlyIGFzIHdlbGxcbiAgICAgICAgICAgICAgICBpZihPYmplY3QudmFsdWVzKGhhbmRDb3VudCkuZmluZCgoYXJyKSA9PiBhcnIubGVuZ3RoID09PSAyICYmIGFyclswXSAhPT0gaGFuZEZvdXJPZktpbmRbMF0pIHx8IE9iamVjdC52YWx1ZXMoY3VyckhhbmRDb3VudCkuZmluZCgoYXJyKSA9PiBhcnIubGVuZ3RoID09PSAyICYmIGFyclswXSAhPT0gY3VyckhhbmRGb3VyT2ZLaW5kWzBdKSl7XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IGhhbmRQYWlyID0gT2JqZWN0LnZhbHVlcyhoYW5kQ291bnQpLmZpbmQoKGFycikgPT4gYXJyLmxlbmd0aCA9PT0gMiAmJiBhcnJbMF0gIT09IGhhbmRUaHJlZU9mS2luZFswXSk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBjdXJySGFuZFBhaXIgPSBPYmplY3QudmFsdWVzKGN1cnJIYW5kQ291bnQpLmZpbmQoKGFycikgPT4gYXJyLmxlbmd0aCA9PT0gMiAmJiBhcnJbMF0gIT09IGN1cnJIYW5kVGhyZWVPZktpbmRbMF0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmKGhhbmRQYWlyICYmIGN1cnJIYW5kUGFpcil7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihoYW5kUGFpclswXSA9PT0gY3VyckhhbmRQYWlyWzBdKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoY3VyckhhbmRQYWlyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZCA9IGN1cnJlbnRIYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihjdXJySGFuZFBhaXIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmQgPSBjdXJySGFuZENvdW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHRpZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIC8vIGhhbmRJZHgucHVzaChpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9ZWxzZSBpZiAoVVRJTC52YWx1ZXMuaW5kZXhPZihoYW5kVGhyZWVPZktpbmRbMF0pIDwgVVRJTC52YWx1ZXMuaW5kZXhPZihjdXJySGFuZFRocmVlT2ZLaW5kWzBdKSl7XG4gICAgICAgICAgICAgICAgaGFuZCA9IGN1cnJlbnRIYW5kO1xuICAgICAgICAgICAgICAgIC8vIGhhbmRJZHhbMF0gPSBpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGlmIChjdXJySGFuZFRocmVlT2ZLaW5kKXtcbiAgICAgICAgICAgICAgICBoYW5kID0gY3VycmVudEhhbmQ7XG4gICAgICAgICAgICAgICAgLy8gaGFuZElkeFswXSA9IGk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gW2hhbmQsIGhhbmRJZHgsIHRpZV1cbiAgICB9XG5cbiAgICAvL2RvbmUgYW5kIHdvcmtpbmchISFcbiAgICBjb21wYXJlUGFpcnMoaGFuZCwgaGFuZENvdW50LCBjdXJyZW50SGFuZCwgY3VyckhhbmRDb3VudCwgaGFuZElkeCwgdGllKXsgLy8gd29ya2luZyEhXG4gICAgICAgIGxldCBoYW5kUGFpciA9IE9iamVjdC52YWx1ZXMoaGFuZENvdW50KS5maW5kKChhcnIpID0+IGFyci5sZW5ndGggPT09IDIpO1xuICAgICAgICBsZXQgY3VyckhhbmRQYWlyID0gT2JqZWN0LnZhbHVlcyhjdXJySGFuZENvdW50KS5maW5kKChhcnIpID0+IGFyci5sZW5ndGggPT09IDIpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhoYW5kUGFpcilcbiAgICAgICAgLy8gY29uc29sZS5sb2coY3VyckhhbmRQYWlyKVxuICAgICAgICBcbiAgICAgICAgLy9jaGVjayBpZiBwYWlyIGlzIGFtb3VuZyBvbmx5IGRlYWxlcidzIGhhbmQsIHN0aWxsIG5lZWQgdG8gd29yayBvbiB0aGlzXG4gICAgICAgIGlmKGhhbmRQYWlyICYmIGN1cnJIYW5kUGFpcil7IC8vIGJvdGggaGF2ZSBhIHBhaXJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdoaScpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmKE9iamVjdC52YWx1ZXMoaGFuZENvdW50KS5maW5kKChhcnIpID0+IGFyci5sZW5ndGggPT09IDIgJiYgYXJyWzBdICE9PSBoYW5kUGFpclswXSkgfHwgT2JqZWN0LnZhbHVlcyhjdXJySGFuZENvdW50KS5maW5kKChhcnIpID0+IGFyci5sZW5ndGggPT09IDIgJiYgYXJyWzBdICE9PSBjdXJySGFuZFBhaXJbMF0pKXsgLy9hdGxlYXN0IG9uZSBoYXMgdHdvIHBhaXJzLCBXT0tSSU5HISEhXG4gICAgICAgICAgICAgICAgLy9jaGVjayB3aG8gaGFzIHRoZSBzZWNvbmQgcGFpciBpZiBub3QgYm90aFxuICAgICAgICAgICAgICAgIGxldCBzZWNvbmRIYW5kUGFpciA9IE9iamVjdC52YWx1ZXMoaGFuZENvdW50KS5maW5kKChhcnIpID0+IGFyci5sZW5ndGggPT09IDIgJiYgYXJyWzBdICE9PSBoYW5kUGFpclswXSk7XG4gICAgICAgICAgICAgICAgbGV0IHNlY29uZEN1cnJIYW5kUGFpciA9IE9iamVjdC52YWx1ZXMoY3VyckhhbmRDb3VudCkuZmluZCgoYXJyKSA9PiBhcnIubGVuZ3RoID09PSAyICYmIGFyclswXSAhPT0gY3VyckhhbmRQYWlyWzBdKTtcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhzZWNvbmRIYW5kUGFpcik7XG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coc2Vjb25kQ3VyckhhbmRQYWlyKTtcblxuICAgICAgICAgICAgICAgIGlmKHNlY29uZEhhbmRQYWlyICYmIHNlY29uZEN1cnJIYW5kUGFpcil7XG4gICAgICAgICAgICAgICAgICAgIGlmKHNlY29uZEhhbmRQYWlyWzBdID09PSBzZWNvbmRDdXJySGFuZFBhaXJbMF0pe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGllID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGhhbmRJZHgucHVzaChpKTtcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoVVRJTC52YWx1ZXMuaW5kZXhPZihzZWNvbmRIYW5kUGFpclswXSkgPCBVVElMLnZhbHVlcy5pbmRleE9mKHNlY29uZEN1cnJIYW5kUGFpclswXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kID0gY3VycmVudEhhbmQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGllID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaGFuZENvdW50ID0gW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9ZWxzZXsvLyBXT1JLSU5HISFcbiAgICAgICAgICAgICAgICAgICAgaWYoc2Vjb25kQ3VyckhhbmRQYWlyKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmQgPSBjdXJyZW50SGFuZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaGFuZElkeCA9IFtpXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfWVsc2V7IC8vIGxvb2sgZm9yIHRoZSBwYWlyIHdpdGggdGhlIGhpZ2hlc3QgdmFsdWUsIFdPS1JJTkchISFcbiAgICAgICAgICAgICAgICBpZihoYW5kUGFpclswXSA9PT0gY3VyckhhbmRQYWlyWzBdKXtcbiAgICAgICAgICAgICAgICAgICAgdGllID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgLy8gaGFuZElkeC5wdXNoKGkpO1xuICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aWUpO1xuICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICBpZiggVVRJTC52YWx1ZXMuaW5kZXhPZihjdXJySGFuZFBhaXJbMF0pID4gVVRJTC52YWx1ZXMuaW5kZXhPZihoYW5kUGFpclswXSkgKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZCA9IGN1cnJlbnRIYW5kO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaGFuZElkeCA9IFtpXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICB9ZWxzZXsgLy8gY2hlY2sgaWYgY3VyckhhbmQgaXMgdGhlIG9uZSB3aXRoIHRoZSBwYWlyLCBXT1JLSU5HISEhIVxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ29uZSBwYWlyJylcbiAgICAgICAgICAgIGlmIChjdXJySGFuZFBhaXIpe1xuICAgICAgICAgICAgICAgIHRpZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGhhbmQgPSBjdXJyZW50SGFuZDtcbiAgICAgICAgICAgICAgICAvLyBoYW5kSWR4ID0gW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gY29uc29sZS5sb2coJ2luIENvbXBhcmVQYWlycycpXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGhhbmQpO1xuICAgICAgICByZXR1cm4gW2hhbmQsIGhhbmRJZHgsIHRpZV07XG4gICAgfVxuXG59XG5jbGFzcyBQbGF5ZXJIYW5keyAvLyBmaW5lLCBkb250IHRvdWNoXG4gICAgY29uc3RydWN0b3IoZGVjayl7XG4gICAgICAgIHRoaXMuZGVjayA9IGRlY2s7IC8vIHJlZmVyZW5jZSB0byB0aGUgZ2FtZSdzIGNhcmQgZGVja1xuICAgICAgICB0aGlzLmhhbmQgPSBbXTsgLy8gYXJyYXkgdGhhdCB3aWxsIGhvbGQgdGhpcyBwbGF5ZXIncyBjYXJkc1xuICAgIH1cblxuXG4gICAgYWRkVG9IYW5kKG51bSl7IC8vIG1heWJlIGFkZCBhIHJhbmRvbSB3YXkgZWl0aGVyIHBvcC9zaGlmdFxuICAgICAgICAvL3Rha2UgYSBjYXJkIGZyb20gZGVjayBhbmQgYWRkIHRvIGhhbmQsIHJlbW92ZSBjYXJkIGZyb20gZGVja1xuICAgICAgICB3aGlsZShudW0gPiAwKXtcbiAgICAgICAgICAgIHRoaXMuaGFuZC5wdXNoKHRoaXMuZGVjay5zaGlmdCgpKTtcbiAgICAgICAgICAgIG51bS0tO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cbi8vaGF2ZSBhIGRvIGxvb3AgdG8gY3JlYXRlIG5ldyBtdWx0Q2hvaWNlIGdhbWVzL3F1ZXN0aW9ucywgY29uZGl0aW9uOiBhbnN3ZXIgbXVzdCBiZSByaWdodFxuXG5sZXQgZ2FtZSA9IG5ldyBtdWx0aUNob2ljZSgpO1xuLy8gZ2FtZS5oYW5kcy5jYWxsKGdhbWUsIDUpO1xuY29uc29sZS5sb2coZ2FtZSk7XG5nYW1lLnByaW50R2FtZS5jYWxsKGdhbWUsIDUpO1xuZ2FtZS5kZWFsZXIuYWRkVG9IYW5kLmNhbGwoZ2FtZS5kZWFsZXIsIDEpXG4vLyBjb25zb2xlLmxvZyhcImRlYWxlciBoYW5kXCIpXG4vLyBjb25zb2xlLmxvZyhnYW1lLmRlYWxlci5oYW5kKVxuY29uc29sZS5sb2coJ1dpbm5lciBIYW5kJylcbmNvbnNvbGUubG9nKGdhbWUuYmVzdEhhbmQuY2FsbChnYW1lLCAzKSk7XG5cbi8vL2J1aWxkIGEgZGF0YWJhc2Ugd2l0aCBwb3NzaWJsZSBxdWVzdGlvbnMgdG8gcXVlcnkgZm9yIHRvIHVzZSBkdXJpbmcgZWFjaCByb3VuZFxuXG5cbmNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYW52YXMnKTtcbmNyZWF0ZVRhYmxlKGdhbWUpO1xuXG5mdW5jdGlvbiBjcmVhdGVUYWJsZShnYW1lKXtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgMTsgaSsrKXtcbiAgICAgICAgLy8gY29uc3QgcGxheWVySGFuZCA9IGdhbWUucGxheWVyc1tpXS5oYW5kXG4gICAgICAgIC8vIGNvbnN0IGNhcmRPbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICAgICAgLy8gY29uc3QgY2FyZFR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuXG4gICAgICAgIC8vIFVUSUwuc3VpdHMuaW5kZXhPZihjdXJySGFuZFBhaXJbMF0pXG5cbiAgICAgICAgLy8gY29uc3QgY2FyZE9uZUltZyA9IFVUSUwuY2FyZEltZ3MuZmluZCh7bmFtZX0gPT4gKG5hbWUgPT09IHBsYXllckhhbmRbMF0uc3VpdC5jb25jYXQoJy0nKS5jb25jYXQocGxheWVySGFuZFswXS52YWx1ZS50b1N0cmluZygpKSlcbiAgICAgICAgLy8gY29uc3QgY2FyZFR3b0ltZyA9IFVUSUwuY2FyZEltZ3MuZmluZCgoY2FyZCkgPT4ge1xuICAgICAgICAvLyAgICAgbGV0IGF0dHJpYnVlcyA9IGNhcmQubmFtZS5zcGxpdChcIi1cIilcblxuICAgICAgICAvLyAgICAgYXR0cmlidWVzWzBdID09PSBwbGF5ZXJIYW5kWzFdLnN1aXQgJiYgcGFyc2VJbnQoYXR0cmlidWVzWzFdKSA9PT0gcGxheWVySGFuZFsxXS52YWx1ZVxuICAgICAgICAvLyB9KVxuICAgICAgICAvLyBjb25zb2xlLmxvZyhjYXJkT25lSW1nKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coY2FyZFR3b0ltZyk7XG4gICAgICAgIC8vIGNhcmRPbmUuc2V0QXR0cmlidXRlKCdzcmMnLCBjYXJkT25lSW1nW2ltZ10pXG4gICAgICAgIC8vIGNhcmRUd28uc2V0QXR0cmlidXRlKCdzcmMnLCBjYXJkVHdvSW1nW2ltZ10pXG5cbiAgICAgICAgLy8gY29uc29sZS5sb2coY2FyZE9uZSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGNhcmRUd28pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJkZWNrQ3JlYXRpb24iLCJVVElMIiwibXVsdGlDaG9pY2UiLCJjb25zdHJ1Y3RvciIsImRlY2siLCJwbGF5ZXJzIiwiaGFuZHMiLCJkZWFsZXIiLCJQbGF5ZXJIYW5kIiwiYWRkVG9IYW5kIiwiY2FsbCIsIm51bSIsImkiLCJwbGF5ZXIiLCJwdXNoIiwicHJpbnRHYW1lIiwiY29uc29sZSIsImxvZyIsImhhbmQiLCJsZW5ndGgiLCJiZXN0SGFuZCIsInJvdW5kIiwidGllIiwiY3VycmVudEhhbmQiLCJyb3VuZE9uZVRvVHdvIiwiaGFuZElkeCIsImNvbmNhdCIsImhhbmRDb3VudCIsImN1cnJIYW5kQ291bnQiLCJ2YWx1ZSIsIk9iamVjdCIsInZhbHVlcyIsImZpbmQiLCJlbGUiLCJyZXN1bHQiLCJjb21wYXJlRm91ck9mS2luZCIsImNvbXBhcmVUaHJlZU9mS2luZCIsImFyciIsImNvbXBhcmVQYWlycyIsImNvbXBhcmVIYW5kVmFsdWVzIiwic2xpY2UiLCJsYXN0Um91bmRzIiwiaGFuZFBhaXIiLCJjdXJyZW50SGFuZFBhaXIiLCJpbmRleE9mIiwiZGVhbGVySGFuZCIsImhhbmQxIiwiaGFuZDIiLCJoYW5kMU1heCIsImhhbmQyTWF4IiwiaGFuZFRocmVlT2ZLaW5kIiwiY3VyckhhbmRUaHJlZU9mS2luZCIsImhhbmRUaHJlZU9mS2luZFNlY29uZCIsImN1cnJIYW5kVGhyZWVPZktpbmRTZWNvbmQiLCJoYW5kQmVzdFRocmVlT2ZLaW5kIiwiY3VyckhhbmRCZXN0VGhyZWVPZktpbmQiLCJUSUwiLCJjdXJySGFuZFBhaXIiLCJoYW5kRm91ck9mS2luZCIsImN1cnJIYW5kRm91ck9mS2luZCIsInNlY29uZEhhbmRQYWlyIiwic2Vjb25kQ3VyckhhbmRQYWlyIiwic2hpZnQiLCJnYW1lIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY3JlYXRlVGFibGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/cards.js":
/*!******************************!*\
  !*** ./src/scripts/cards.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deckCreation: function() { return /* binding */ deckCreation; }\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\n\n//I think im done with this portion, cards have two attributes their suit and number/value\n//I dont think I need any methods for the card class\nclass Card {\n  constructor(suit, value) {\n    this.suit = suit;\n    this.value = value;\n  }\n}\n\n// returning a generated deck of cards\nfunction deckCreation() {\n  //variables for creation of cards/deck\n  // const suits = ['♣', '♦', '♥', '♠']\n  // const values = ['A', 'K', 'Q', 'J', '10', '9', '8', '7', '6', '5', '4', '3', '2']\n  //flatten method with map\n  let deck = _util__WEBPACK_IMPORTED_MODULE_0__.suits.flatMap(suit => {\n    return _util__WEBPACK_IMPORTED_MODULE_0__.values.map(value => {\n      // returns an array of cards of a suit paried with each value in values array\n      return new Card(suit, value);\n    });\n  });\n  return deck.sort(() => 0.5 - Math.random()); // shuffling deck array randomly \n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jYXJkcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QjtBQUM5QjtBQUNBO0FBQ0EsTUFBTUMsSUFBSSxDQUFDO0VBQ1BDLFdBQVdBLENBQUNDLElBQUksRUFBRUMsS0FBSyxFQUFDO0lBQ3BCLElBQUksQ0FBQ0QsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHQSxLQUFLO0VBQ3RCO0FBQ0o7O0FBRUE7QUFDTyxTQUFTQyxZQUFZQSxDQUFBLEVBQUU7RUFDMUI7RUFDQTtFQUNBO0VBQ0E7RUFDQSxJQUFJQyxJQUFJLEdBQUdOLHdDQUFVLENBQUNRLE9BQU8sQ0FBQ0wsSUFBSSxJQUFJO0lBQ2xDLE9BQU9ILHlDQUFXLENBQUNVLEdBQUcsQ0FBQ04sS0FBSyxJQUFJO01BQUU7TUFDOUIsT0FBTyxJQUFJSCxJQUFJLENBQUNFLElBQUksRUFBQ0MsS0FBSyxDQUFDO0lBQy9CLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUVGLE9BQU9FLElBQUksQ0FBQ0ssSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHQyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLXByb2plY3QtcG9rZXItYmxhY2tqYWNrLy4vc3JjL3NjcmlwdHMvY2FyZHMuanM/NDUyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVVElMIGZyb20gXCIuL3V0aWxcIlxuLy9JIHRoaW5rIGltIGRvbmUgd2l0aCB0aGlzIHBvcnRpb24sIGNhcmRzIGhhdmUgdHdvIGF0dHJpYnV0ZXMgdGhlaXIgc3VpdCBhbmQgbnVtYmVyL3ZhbHVlXG4vL0kgZG9udCB0aGluayBJIG5lZWQgYW55IG1ldGhvZHMgZm9yIHRoZSBjYXJkIGNsYXNzXG5jbGFzcyBDYXJkIHtcbiAgICBjb25zdHJ1Y3RvcihzdWl0LCB2YWx1ZSl7XG4gICAgICAgIHRoaXMuc3VpdCA9IHN1aXQ7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG59XG5cbi8vIHJldHVybmluZyBhIGdlbmVyYXRlZCBkZWNrIG9mIGNhcmRzXG5leHBvcnQgZnVuY3Rpb24gZGVja0NyZWF0aW9uKCl7XG4gICAgLy92YXJpYWJsZXMgZm9yIGNyZWF0aW9uIG9mIGNhcmRzL2RlY2tcbiAgICAvLyBjb25zdCBzdWl0cyA9IFsn4pmjJywgJ+KZpicsICfimaUnLCAn4pmgJ11cbiAgICAvLyBjb25zdCB2YWx1ZXMgPSBbJ0EnLCAnSycsICdRJywgJ0onLCAnMTAnLCAnOScsICc4JywgJzcnLCAnNicsICc1JywgJzQnLCAnMycsICcyJ11cbiAgICAvL2ZsYXR0ZW4gbWV0aG9kIHdpdGggbWFwXG4gICAgbGV0IGRlY2sgPSBVVElMLnN1aXRzLmZsYXRNYXAoc3VpdCA9PiB7XG4gICAgICAgIHJldHVybiBVVElMLnZhbHVlcy5tYXAodmFsdWUgPT4geyAvLyByZXR1cm5zIGFuIGFycmF5IG9mIGNhcmRzIG9mIGEgc3VpdCBwYXJpZWQgd2l0aCBlYWNoIHZhbHVlIGluIHZhbHVlcyBhcnJheVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBDYXJkKHN1aXQsdmFsdWUpXG4gICAgICAgIH0pXG4gICAgfSkgXG5cbiAgICByZXR1cm4gZGVjay5zb3J0KCgpID0+IDAuNSAtIE1hdGgucmFuZG9tKCkpIC8vIHNodWZmbGluZyBkZWNrIGFycmF5IHJhbmRvbWx5IFxufSJdLCJuYW1lcyI6WyJVVElMIiwiQ2FyZCIsImNvbnN0cnVjdG9yIiwic3VpdCIsInZhbHVlIiwiZGVja0NyZWF0aW9uIiwiZGVjayIsInN1aXRzIiwiZmxhdE1hcCIsInZhbHVlcyIsIm1hcCIsInNvcnQiLCJNYXRoIiwicmFuZG9tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/cards.js\n");

/***/ }),

/***/ "./src/scripts/util.js":
/*!*****************************!*\
  !*** ./src/scripts/util.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cardImgs: function() { return /* binding */ cardImgs; },\n/* harmony export */   rankingHands: function() { return /* binding */ rankingHands; },\n/* harmony export */   suits: function() { return /* binding */ suits; },\n/* harmony export */   values: function() { return /* binding */ values; }\n/* harmony export */ });\n//variables for creation of cards/deck and scoring purposes\nconst suits = ['♣', '♦', '♥', '♠'];\nconst values = ['A', 'K', 'Q', 'J', 10, 9, 8, 7, 6, 5, 4, 3, 2].reverse();\n// export const letterValue = {'A': 14, 'K': 13, 'Q': 12, 'J': 11}\nconst rankingHands = ['high card', 'pair', 'two pairs', 'three of a kind', 'striaght', 'flush', 'full house', 'four of a kind', 'striaght flush', 'royal flush'];\nconst cardImgs = [[{\n  name: '♣-2',\n  img: 'images/2-clover.png'\n}, {\n  name: '♣-3',\n  img: 'images/3-clover.png'\n}, {\n  name: '♣-4',\n  img: 'images/4-clover.png'\n}, {\n  name: '♣-5',\n  img: 'images/5-clover.png'\n}, {\n  name: '♣-6',\n  img: 'images/6-clover.png'\n}, {\n  name: '♣-7',\n  img: 'images/7-clover.png'\n}, {\n  name: '♣-8',\n  img: 'images/8-clover.png'\n}, {\n  name: '♣-9',\n  img: 'images/9-clover.png'\n}, {\n  name: '♣-10',\n  img: 'images/10-clover.png'\n}, {\n  name: '♣-J',\n  img: 'images/J-clover.png'\n}, {\n  name: '♣-Q',\n  img: 'images/Q-clover.png'\n}, {\n  name: '♣-K',\n  img: 'images/K-clover.png'\n}, {\n  name: '♣-A',\n  img: 'images/A-diamond.png'\n}], [{\n  name: '♦-2',\n  img: 'images/2-diamond.png'\n}, {\n  name: '♦-3',\n  img: 'images/3-diamond.png'\n}, {\n  name: '♦-4',\n  img: 'images/4-diamond.png'\n}, {\n  name: '♦-5',\n  img: 'images/5-diamond.png'\n}, {\n  name: '♦-6',\n  img: 'images/6-diamond.png'\n}, {\n  name: '♦-7',\n  img: 'images/7-diamond.png'\n}, {\n  name: '♦-8',\n  img: 'images/8-diamond.png'\n}, {\n  name: '♦-9',\n  img: 'images/9-diamond.png'\n}, {\n  name: '♦-10',\n  img: 'images/10-diamond.png'\n}, {\n  name: '♦-J',\n  img: 'images/J-diamond.png'\n}, {\n  name: '♦-Q',\n  img: 'images/Q-diamond.png'\n}, {\n  name: '♦-K',\n  img: 'images/K-diamond.png'\n}, {\n  name: '♦-A',\n  img: 'images/A-diamond.png'\n}], [{\n  name: '♥-2',\n  img: 'images/2-heart.png'\n}, {\n  name: '♥-3',\n  img: 'images/3-heart.png'\n}, {\n  name: '♥-4',\n  img: 'images/4-heart.png'\n}, {\n  name: '♥-5',\n  img: 'images/5-heart.png'\n}, {\n  name: '♥-6',\n  img: 'images/6-heart.png'\n}, {\n  name: '♥-7',\n  img: 'images/7-heart.png'\n}, {\n  name: '♥-8',\n  img: 'images/8-heart.png'\n}, {\n  name: '♥-9',\n  img: 'images/9-heart.png'\n}, {\n  name: '♥-10',\n  img: 'images/10-heart.png'\n}, {\n  name: '♥-J',\n  img: 'images/J-heart.png'\n}, {\n  name: '♥-Q',\n  img: 'images/Q-heart.png'\n}, {\n  name: '♥-K',\n  img: 'images/K-heart.png'\n}, {\n  name: '♥-A',\n  img: 'images/A-heart.png'\n}], [{\n  name: '♠-2',\n  img: 'images/2-spade.png'\n}, {\n  name: '♠-3',\n  img: 'images/3-spade.png'\n}, {\n  name: '♠-4',\n  img: 'images/4-spade.png'\n}, {\n  name: '♠-5',\n  img: 'images/5-spade.png'\n}, {\n  name: '♠-6',\n  img: 'images/6-spade.png'\n}, {\n  name: '♠-7',\n  img: 'images/7-spade.png'\n}, {\n  name: '♠-8',\n  img: 'images/8-spade.png'\n}, {\n  name: '♠-9',\n  img: 'images/9-clover.png'\n}, {\n  name: '♠-10',\n  img: 'images/10-spade.png'\n}, {\n  name: '♠-J',\n  img: 'images/J-spade.png'\n}, {\n  name: '♠-Q',\n  img: 'images/Q-spade.png'\n}, {\n  name: '♠-K',\n  img: 'images/K-spade.png'\n}, {\n  name: '♠-A',\n  img: 'images/A-spade.png'\n}]];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/util.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0LXBva2VyLWJsYWNramFjay8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;